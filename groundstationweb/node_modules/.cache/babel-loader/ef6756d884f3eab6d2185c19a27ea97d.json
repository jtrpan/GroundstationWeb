{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\CommunicationArea\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Header, Icon, Button } from \"semantic-ui-react\";\nconst localServer = \"ws://localhost:8888\";\nconst remoteServer = \"ws://104.248.73.89:8888\"; // ?????\n\nconst server = remoteServer;\n\nclass CommunicationArea extends Component {\n  constructor(props) {\n    super(props); //this.connect();\n\n    this.state = {\n      connected: false\n    };\n  }\n\n  /*\n  receivedData = (data) => {\n    console.info(\"received:\", data);\n    this.props.receiveData(data);\n  };\n   connect = () => {\n    console.info(\"Connecting....\");\n    const connection = new WebSocket(server);\n    connection.onopen = () => {\n      this.setState({ connected: true });\n      console.info(\"Connected to server\");\n    };\n    connection.onerror = (error) => {\n      console.info(\"Connection error\", error);\n    };\n    connection.onmessage = (e) => {\n      this.receivedData(e.data);\n    };\n    connection.onclose = () => {\n      this.setState({ connected: false });\n      console.info(\"Disconnected from server\");\n    };\n    this.connection = connection;\n  };\n   sendData = () => {\n    const { connected } = this.state;\n    if (!connected) {\n      console.warn(\"Cannot send. Not connected\");\n      return;\n    }\n    const data = JSON.stringify(\n      {\n        type: \"data\",\n        flightData: {\n          latitude: 49.258063+Math.random()*0.00111,\n          longitude: -123.195911+Math.random()*0.00111,\n          altitude: 45.3,\n          velocity: 10.3,\n          headwind: -0.9,\n        },\n      },\n    );\n    console.info(\"Sending:\", data);\n    this.connection.send(data);\n  };\n   ping = () => {\n    const { connected } = this.state;\n    if (!connected) {\n      console.warn(\"Cannot ping. Not connected\");\n      return;\n    }\n    const message = JSON.stringify(\n      {\n        type: \"action\",\n        flightData: {\n          latitude: 49.258063+Math.random()*0.00111,\n          longitude: -123.195911+Math.random()*0.00111,\n          altitude: 45.3,\n          velocity: 10.3,\n          headwind: -0.9,\n        },\n      },\n    );\n    console.info(\"Sending:\", message);\n    this.connection.send(message);\n  };\n   */\n  render() {\n    const connected = this.state.connected;\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h5\",\n      style: {\n        marginBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Communication:\"), React.createElement(\"div\", {\n      style: {\n        color: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Connection status:\\xA0\", connected ? React.createElement(\"strong\", {\n      style: {\n        color: \"limegreen\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Connected\") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"firebrick\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Not Connected\"), \"\\xA0\", React.createElement(Icon, {\n      link: true,\n      name: \"sync\",\n      onClick: this.connect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Button, {\n      icon: \"wifi\",\n      content: \"Ping Aircraft\",\n      fluid: true,\n      basic: true,\n      onClick: this.ping,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: \"send\",\n      content: \"Send Test Data\",\n      fluid: true,\n      basic: true,\n      onClick: this.sendData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CommunicationArea;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/CommunicationArea/index.jsx"],"names":["React","Component","Segment","Header","Icon","Button","localServer","remoteServer","server","CommunicationArea","constructor","props","state","connected","render","marginBottom","color","connect","ping","sendData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AAGA,MAAMC,WAAW,GAAG,qBAApB;AACA,MAAMC,YAAY,GAAG,yBAArB,C,CAA+C;;AAC/C,MAAMC,MAAM,GAAGD,YAAf;;AAEA,MAAME,iBAAN,SAAgCR,SAAhC,CAA0C;AACxCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAKnBC,KALmB,GAKX;AACNC,MAAAA,SAAS,EAAE;AADL,KALW;AAGlB;;AAMD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEAC,EAAAA,MAAM,GAAG;AAAA,UACCD,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEGH,SAAS,GACR;AAAQ,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADQ,GAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,UAGE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CALJ,EAYE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAC,eAA5B;AAA4C,MAAA,KAAK,MAAjD;AAAkD,MAAA,KAAK,MAAvD;AAAwD,MAAA,OAAO,EAAE,KAAKC,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAC,gBAA5B;AAA6C,MAAA,KAAK,MAAlD;AAAmD,MAAA,KAAK,MAAxD;AAAyD,MAAA,OAAO,EAAE,KAAKC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF,CADF;AAoBD;;AAtGuC;;AAyG1C,eAAeV,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Segment, Header, Icon, Button } from \"semantic-ui-react\";\n\n\nconst localServer = \"ws://localhost:8888\";\nconst remoteServer = \"ws://104.248.73.89:8888\";// ?????\nconst server = remoteServer;\n\nclass CommunicationArea extends Component {\n  constructor(props) {\n    super(props);\n    //this.connect();\n  }\n\n  state = {\n    connected: false,\n  };\n\n  /*\n  receivedData = (data) => {\n    console.info(\"received:\", data);\n    this.props.receiveData(data);\n  };\n\n  connect = () => {\n    console.info(\"Connecting....\");\n    const connection = new WebSocket(server);\n    connection.onopen = () => {\n      this.setState({ connected: true });\n      console.info(\"Connected to server\");\n    };\n    connection.onerror = (error) => {\n      console.info(\"Connection error\", error);\n    };\n    connection.onmessage = (e) => {\n      this.receivedData(e.data);\n    };\n    connection.onclose = () => {\n      this.setState({ connected: false });\n      console.info(\"Disconnected from server\");\n    };\n    this.connection = connection;\n  };\n\n  sendData = () => {\n    const { connected } = this.state;\n    if (!connected) {\n      console.warn(\"Cannot send. Not connected\");\n      return;\n    }\n    const data = JSON.stringify(\n      {\n        type: \"data\",\n        flightData: {\n          latitude: 49.258063+Math.random()*0.00111,\n          longitude: -123.195911+Math.random()*0.00111,\n          altitude: 45.3,\n          velocity: 10.3,\n          headwind: -0.9,\n        },\n      },\n    );\n    console.info(\"Sending:\", data);\n    this.connection.send(data);\n  };\n\n  ping = () => {\n    const { connected } = this.state;\n    if (!connected) {\n      console.warn(\"Cannot ping. Not connected\");\n      return;\n    }\n    const message = JSON.stringify(\n      {\n        type: \"action\",\n        flightData: {\n          latitude: 49.258063+Math.random()*0.00111,\n          longitude: -123.195911+Math.random()*0.00111,\n          altitude: 45.3,\n          velocity: 10.3,\n          headwind: -0.9,\n        },\n      },\n    );\n    console.info(\"Sending:\", message);\n    this.connection.send(message);\n  };\n   */\n  render() {\n    const { connected } = this.state;\n    return (\n      <Segment>\n        <Header as=\"h5\" style={{ marginBottom: \"0px\" }}>Communication:</Header>\n        <div style={{ color: \"grey\" }}>\n            Connection status:&nbsp;\n          {connected ? (\n            <strong style={{ color: \"limegreen\" }}>Connected</strong>\n          ): (\n            <span>\n              <strong style={{ color: \"firebrick\" }}>Not Connected</strong>\n                  &nbsp;\n              <Icon link name=\"sync\" onClick={this.connect} />\n            </span>\n\n          )}\n          <Button icon=\"wifi\" content=\"Ping Aircraft\" fluid basic onClick={this.ping} />\n          <Button icon=\"send\" content=\"Send Test Data\" fluid basic onClick={this.sendData} />\n        </div>\n      </Segment>\n    );\n  }\n}\n\nexport default CommunicationArea;\n"]},"metadata":{},"sourceType":"module"}