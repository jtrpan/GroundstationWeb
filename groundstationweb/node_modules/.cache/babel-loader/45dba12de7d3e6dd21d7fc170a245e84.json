{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Documents\\\\UBC\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\DropArea\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Header, Button, Icon, Modal, Statistic, Card, Dropdown } from \"semantic-ui-react\";\nimport _ from 'lodash';\nimport DomArea from \"../DomArea\";\nimport \"./style.css\";\nconst textSizes = [{\n  key: 'Mini',\n  text: 'Mini',\n  value: 'mini'\n}, {\n  key: 'Small',\n  text: 'Small',\n  value: 'small'\n}, {\n  key: 'Large',\n  text: 'Large',\n  value: 'large'\n}, {\n  key: 'Huge',\n  text: 'Huge',\n  value: 'huge'\n}];\n\nclass DropArea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habAlt: 0,\n      cdaAlt: 0,\n      confirmationOpen1: false,\n      confirmationOpen2: false,\n      confirmationOpen3: false,\n      confirmationOpen4: false,\n      fontSize: textSizes[0]\n    };\n\n    this.handleSizeChange = (event, data) => {\n      this.setState({\n        fontSize: data.value\n      });\n    };\n\n    this.dropPayload = () => {\n      const _this$props = this.props,\n            currentData = _this$props.currentData,\n            webSocketManager = _this$props.webSocketManager,\n            isConnected = _this$props.isConnected,\n            cargoDropped = _this$props.cargoDropped,\n            setDropped = _this$props.setDropped;\n\n      if (!isConnected) {\n        this.setState({\n          confirmationOpen4: true\n        });\n        return;\n      }\n\n      if (!cargoDropped && currentData) {\n        // SEND SIGNAL THROUGH SERVER TO PHONE, PHONE SHOULD INTERPRET THIS INPUT AND TELL SERVO TO RELEASE WATER + HABITATS\n        webSocketManager.release(\"habitat + water\");\n        this.setState({\n          habAlt: currentData.altitude\n        });\n        setDropped(\"cargoDropped\", true); // send signal to phone to release\n      } else if (cargoDropped) {\n        this.setState({\n          confirmationOpen1: true\n        });\n      }\n    };\n\n    this.releaseCDA = () => {\n      const _this$props2 = this.props,\n            currentData = _this$props2.currentData,\n            webSocketManager = _this$props2.webSocketManager,\n            isConnected = _this$props2.isConnected,\n            cdaDropped = _this$props2.cdaDropped,\n            setDropped = _this$props2.setDropped;\n\n      if (!isConnected) {\n        this.setState({\n          confirmationOpen4: true\n        });\n        return;\n      }\n\n      if (!cdaDropped && currentData) {\n        // SEND SIGNAL THROUGH SERVER TO PHONE, PHONE SHOULD INTERPRET THIS INPUT AND TELL SERVO TO RELEASE CDA 1\n        webSocketManager.release(\"CDA One\");\n        this.setState({\n          cdaAlt: currentData.altitude\n        });\n        setDropped(\"cdaDropped\", true); // send signal to phone to release\n      } else if (cdaDropped) {\n        this.setState({\n          confirmationOpen2: true\n        });\n      }\n    };\n\n    this.resetDrops = () => {\n      this.setState({\n        confirmationOpen3: true\n      });\n    };\n  }\n\n  // <Button basic color=\"brown\" content=\"Drop\" icon=\"first aid\" onClick={this.dropPayload} />\n  render() {\n    const _this$state = this.state,\n          habAlt = _this$state.habAlt,\n          cdaAlt = _this$state.cdaAlt,\n          confirmationOpen1 = _this$state.confirmationOpen1,\n          confirmationOpen2 = _this$state.confirmationOpen2,\n          confirmationOpen3 = _this$state.confirmationOpen3,\n          confirmationOpen4 = _this$state.confirmationOpen4,\n          fontSize = _this$state.fontSize;\n    const setDropped = this.props.setDropped;\n    return React.createElement(DomArea, {\n      header: \"Payload Release\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Airdrop: \\u2003 \\u2003 \\u2003 \\u2003 \\u2003\", React.createElement(Button, {\n      basic: true,\n      color: \"red\",\n      content: \"Reset Drops\",\n      icon: \"repeat\",\n      compact: \"true\",\n      onClick: this.resetDrops,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        overflow: \"hidden\",\n        fontSize: \"12pt\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      icon: \"tint\",\n      color: \"blue\",\n      content: \"Water\",\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      icon: \"home\",\n      color: \"brown\",\n      content: \"Habitat\",\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Header, {\n      color: \"black\",\n      textAlign: \"center\",\n      content: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\u2003\", React.createElement(Statistic, {\n        horizontal: true,\n        label: \"ft.\",\n        value: habAlt,\n        size: fontSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \"\\u2003\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Button, {\n      basic: true,\n      color: \"black\",\n      compact: \"true\",\n      onClick: this.dropPayload,\n      content: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        fitted: true,\n        name: \"tint\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), \"\\xA0 + \\xA0\", React.createElement(Icon, {\n        fitted: true,\n        name: \"home\",\n        color: \"brown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), \"\\xA0 Drop\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      icon: \"paper plane\",\n      color: \"violet\",\n      content: \"Colonist Delivery Aircrafts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Header, {\n      color: \"black\",\n      textAlign: \"center\",\n      content: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Statistic, {\n        horizontal: true,\n        label: \"ft.\",\n        value: cdaAlt,\n        size: fontSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \"\\u2003\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Button, {\n      basic: true,\n      color: \"violet\",\n      content: \"Release\",\n      icon: \"space shuttle\",\n      onClick: this.releaseCDA,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      open: confirmationOpen1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Notice: Cargo\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"exclamation\",\n      size: \"big\",\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), \"Both the water module and the habitat module have already been released.\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"OK\",\n      color: \"green\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen1: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Button, {\n      negative: true,\n      content: \"Reset Payload Release\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen1: false,\n          habAlt: 0\n        });\n        setDropped(\"cargoDropped\", false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      open: confirmationOpen2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Notice: Gliders\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"exclamation\",\n      size: \"big\",\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"All three of the CDAs have already been released.\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"OK\",\n      color: \"green\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen2: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Button, {\n      negative: true,\n      content: \"Reset CDA Release\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen2: false,\n          cdaAlt: 0\n        });\n        setDropped(\"cdaDropped\", false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      open: confirmationOpen3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Alert: Reset Payload + CDA Drop\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"exclamation\",\n      size: \"big\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), \"Are you sure you want to clear all of the current drop values? This action cannot be undone.\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      content: \"Reset Drops\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen3: false,\n          habAlt: 0,\n          cdaAlt: 0\n        });\n        setDropped(\"cdaDropped\", false);\n        setDropped(\"cargoDropped\", false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Cancel\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen3: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      open: confirmationOpen4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Error: No Connection\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"exclamation\",\n      size: \"big\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), \"Groundstation encountered an error communicating with the aircraft. Please check connection to the server.\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Dismiss\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen4: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Display Settings: \\u2003 \\u2003 \\u2003 \\u2003\", React.createElement(Dropdown, {\n      placeholder: \"Text Size\",\n      fluid: true,\n      selection: true,\n      options: textSizes,\n      onChange: this.handleSizeChange //value={this.state.fontSize}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default DropArea;\n/*\n<Dropdown\n    placeholder=\"Text Size\"\n    fluid\n    selection\n    options={textSizes}\n    onChange={this.handleSizeChange}\n/>\n\n\n<select onChange={this.handleSizeChange}>\n              {_.map(sizes, (s) => {\n                return (\n                  <option key={s} value={s}>\n                    {_.startCase(s)}\n                  </option>\n                );\n              })}\n            </select>\n */","map":{"version":3,"sources":["C:/Users/James Pan/Documents/UBC/demo/groundstationweb/src/components/DropArea/index.jsx"],"names":["React","Component","Segment","Header","Button","Icon","Modal","Statistic","Card","Dropdown","_","DomArea","textSizes","key","text","value","DropArea","state","habAlt","cdaAlt","confirmationOpen1","confirmationOpen2","confirmationOpen3","confirmationOpen4","fontSize","handleSizeChange","event","data","setState","dropPayload","props","currentData","webSocketManager","isConnected","cargoDropped","setDropped","release","altitude","releaseCDA","cdaDropped","resetDrops","render","width","overflow","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Segment, Header, Button, Icon, Modal, Statistic, Card, Dropdown } from \"semantic-ui-react\";\nimport _ from 'lodash';\nimport DomArea from \"../DomArea\";\nimport \"./style.css\";\n\nconst textSizes = [\n  {\n    key: 'Mini',\n    text: 'Mini',\n    value: 'mini',\n  },\n  {\n    key: 'Small',\n    text: 'Small',\n    value: 'small',\n  },\n  {\n    key: 'Large',\n    text: 'Large',\n    value: 'large',\n  },\n  {\n    key: 'Huge',\n    text: 'Huge',\n    value: 'huge',\n  },\n];\n\n\nclass DropArea extends Component {\n  state = {\n    habAlt: 0,\n    cdaAlt: 0,\n    confirmationOpen1: false,\n    confirmationOpen2: false,\n    confirmationOpen3: false,\n    confirmationOpen4: false,\n    fontSize: textSizes[0],\n  };\n\n  handleSizeChange = (event, data) => {\n    this.setState({ fontSize: data.value });\n  };\n\n  dropPayload = () => {\n    const { currentData, webSocketManager, isConnected, cargoDropped, setDropped } = this.props;\n    if (!isConnected) {\n      this.setState({ confirmationOpen4: true });\n      return;\n    }\n    if (!cargoDropped && currentData) {\n      // SEND SIGNAL THROUGH SERVER TO PHONE, PHONE SHOULD INTERPRET THIS INPUT AND TELL SERVO TO RELEASE WATER + HABITATS\n      webSocketManager.release(\"habitat + water\");\n      this.setState({ habAlt: currentData.altitude });\n      setDropped(\"cargoDropped\", true);\n      // send signal to phone to release\n    } else if (cargoDropped) {\n      this.setState({ confirmationOpen1: true });\n    }\n  };\n\n  releaseCDA = () => {\n    const { currentData, webSocketManager, isConnected, cdaDropped, setDropped } = this.props;\n    if (!isConnected) {\n      this.setState({ confirmationOpen4: true });\n      return;\n    }\n    if (!cdaDropped && currentData) {\n      // SEND SIGNAL THROUGH SERVER TO PHONE, PHONE SHOULD INTERPRET THIS INPUT AND TELL SERVO TO RELEASE CDA 1\n      webSocketManager.release(\"CDA One\");\n      this.setState({ cdaAlt: currentData.altitude });\n      setDropped(\"cdaDropped\", true);\n      // send signal to phone to release\n    } else if (cdaDropped) {\n      this.setState({ confirmationOpen2: true });\n    }\n  };\n\n  resetDrops = () => {\n    this.setState({ confirmationOpen3: true });\n  };\n\n  // <Button basic color=\"brown\" content=\"Drop\" icon=\"first aid\" onClick={this.dropPayload} />\n\n  render() {\n    const { habAlt, cdaAlt, confirmationOpen1, confirmationOpen2, confirmationOpen3, confirmationOpen4, fontSize } = this.state;\n    const { setDropped } = this.props;\n    return (\n      <DomArea header=\"Payload Release\">\n        <Segment>\n          <Header as=\"h4\">\n              Airdrop: &emsp; &emsp; &emsp; &emsp; &emsp;\n            <Button basic color=\"red\" content=\"Reset Drops\" icon=\"repeat\" compact=\"true\" onClick={this.resetDrops} />\n          </Header>\n          <div style={{ width: \"100%\", overflow: \"hidden\", fontSize: \"12pt\" }}>\n            <Card>\n              <Card.Content>\n                <Header\n                  as=\"h3\"\n                  icon=\"tint\"\n                  color=\"blue\"\n                  content=\"Water\"\n                  floated=\"left\"\n\n                />\n                <Header\n                  as=\"h3\"\n                  icon=\"home\"\n                  color=\"brown\"\n                  content=\"Habitat\"\n                  floated=\"right\"\n                />\n                <Header\n                  color=\"black\"\n                  textAlign=\"center\"\n                  content={(\n                    <span>\n                      &emsp;\n                      <Statistic horizontal label=\"ft.\" value={habAlt} size={fontSize} />\n                      &emsp;\n                    </span>\n                      )}\n                />\n              </Card.Content>\n              <Button\n                basic\n                color=\"black\"\n                compact=\"true\"\n                onClick={this.dropPayload}\n                content={(\n                  <span>\n                    <Icon fitted name=\"tint\" color=\"blue\" />\n                          &nbsp; + &nbsp;\n                    <Icon\n                      fitted\n                      name=\"home\"\n                      color=\"brown\"\n                    />\n                          &nbsp; Drop\n                  </span>\n                    )}\n              />\n            </Card>\n            <Card>\n              <Card.Content>\n                <Header\n                  as=\"h3\"\n                  icon=\"paper plane\"\n                  color=\"violet\"\n                  content=\"Colonist Delivery Aircrafts\"\n                />\n\n                <Header\n                  color=\"black\"\n                  textAlign=\"center\"\n                  content={(\n                    <span>\n                      <Statistic horizontal label=\"ft.\" value={cdaAlt} size={fontSize} />\n                      &emsp;\n                    </span>\n                      )}\n                />\n              </Card.Content>\n              <Button basic color=\"violet\" content=\"Release\" icon=\"space shuttle\" onClick={this.releaseCDA} />\n            </Card>\n          </div>\n          <Modal\n            open={confirmationOpen1}\n          >\n            <Modal.Header>\n                Notice: Cargo\n            </Modal.Header>\n            <Modal.Content>\n              <div style={{ padding: \"1em\" }}>\n                <Icon name=\"exclamation\" size=\"big\" color=\"yellow\" />\n                  Both the water module and the habitat module have already been released.\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                content=\"OK\"\n                color=\"green\"\n                onClick={() => { this.setState({ confirmationOpen1: false }); }}\n              />\n              <Button\n                negative\n                content=\"Reset Payload Release\"\n                onClick={() => {\n                  this.setState({\n                    confirmationOpen1: false,\n                    habAlt: 0,\n                  });\n                  setDropped(\"cargoDropped\", false);\n                }}\n              />\n            </Modal.Actions>\n          </Modal>\n          <Modal\n            open={confirmationOpen2}\n          >\n            <Modal.Header>\n                Notice: Gliders\n            </Modal.Header>\n            <Modal.Content>\n              <div style={{ padding: \"1em\" }}>\n                <Icon name=\"exclamation\" size=\"big\" color=\"yellow\" />\n                  All three of the CDAs have already been released.\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                content=\"OK\"\n                color=\"green\"\n                onClick={() => { this.setState({ confirmationOpen2: false }); }}\n              />\n              <Button\n                negative\n                content=\"Reset CDA Release\"\n                onClick={() => {\n                  this.setState({\n                    confirmationOpen2: false,\n                    cdaAlt: 0,\n                  });\n                  setDropped(\"cdaDropped\", false);\n                }}\n              />\n            </Modal.Actions>\n          </Modal>\n          <Modal\n            open={confirmationOpen3}\n          >\n            <Modal.Header>\n                Alert: Reset Payload + CDA Drop\n            </Modal.Header>\n            <Modal.Content>\n              <div style={{ padding: \"1em\" }}>\n                <Icon name=\"exclamation\" size=\"big\" color=\"red\" />\n                  Are you sure you want to clear all of the current drop values? This action cannot be undone.\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                negative\n                content=\"Reset Drops\"\n                onClick={() => {\n                  this.setState({\n                    confirmationOpen3: false,\n                    habAlt: 0,\n                    cdaAlt: 0,\n                  });\n                  setDropped(\"cdaDropped\", false);\n                  setDropped(\"cargoDropped\", false);\n                }}\n              />\n              <Button\n                content=\"Cancel\"\n                onClick={() => { this.setState({ confirmationOpen3: false }); }}\n              />\n            </Modal.Actions>\n          </Modal>\n          <Modal\n            open={confirmationOpen4}\n          >\n            <Modal.Header>\n                Error: No Connection\n            </Modal.Header>\n            <Modal.Content>\n              <div style={{ padding: \"1em\" }}>\n                <Icon name=\"exclamation\" size=\"big\" color=\"red\" />\n                  Groundstation encountered an error communicating with the aircraft. Please check connection to the server.\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                content=\"Dismiss\"\n                onClick={() => {\n                  this.setState({\n                    confirmationOpen4: false,\n                  });\n                }}\n              />\n            </Modal.Actions>\n          </Modal>\n        </Segment>\n        <Segment>\n          <Header as=\"h4\">\n              Display Settings: &emsp; &emsp; &emsp; &emsp;\n            <Dropdown\n              placeholder=\"Text Size\"\n              fluid\n              selection\n              options={textSizes}\n              onChange={this.handleSizeChange}\n              //value={this.state.fontSize}\n            />\n          </Header>\n        </Segment>\n      </DomArea>\n    );\n  }\n}\nexport default DropArea;\n\n/*\n<Dropdown\n    placeholder=\"Text Size\"\n    fluid\n    selection\n    options={textSizes}\n    onChange={this.handleSizeChange}\n/>\n\n\n<select onChange={this.handleSizeChange}>\n              {_.map(sizes, (s) => {\n                return (\n                  <option key={s} value={s}>\n                    {_.startCase(s)}\n                  </option>\n                );\n              })}\n            </select>\n */\n"]},"metadata":{},"sourceType":"module"}