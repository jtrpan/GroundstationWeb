{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\GroundStation\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Tab } from \"semantic-ui-react\";\nimport \"../MapArea/css/resize.css\";\nimport MapArea from \"../MapArea\";\nimport DataArea from \"../DataArea\";\nimport DropArea from \"../DropArea\";\nimport { predictPayload, predictCDA } from \"../../helpers/predictions\";\nimport { predictLoc } from \"../../helpers/location\";\nimport { getDirection } from \"../../helpers/direction\";\n\nclass GroundStation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: {},\n      dataLog: [],\n      planePositionHistory: [],\n      oldDirection: 0\n    };\n    this.lastPacketTime = 0;\n\n    this.receiveData = rawData => {\n      const _this$state = this.state,\n            currentData = _this$state.currentData,\n            planePositionHistory = _this$state.planePositionHistory;\n      const log = this.state.dataLog || [];\n      const data = JSON.parse(rawData);\n      const time = +Date.now();\n      const timeElapsed = time - this.lastPacketTime;\n      data.timeElapsed = timeElapsed;\n      this.lastPacketTime = time;\n\n      if (data.flightData) {\n        data.flightData.timereceived = time / 1000 || 0;\n        data.flightData.payloadPredictionDistance = predictPayload(data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.CDAPredictionDistance = predictCDA(data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.direction = getDirection(currentData.flightData, data.flightData);\n\n        if (data.flightData.direction === 0) {\n          data.flightData.direction = this.state.oldDirection;\n        }\n\n        data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\n        data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\n        planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\n        log.push(data.flightData);\n        this.setState({\n          currentData: data,\n          dataLog: log,\n          planePositionHistory: planePositionHistory,\n          oldDirection: data.flightData.direction\n        });\n      }\n    };\n\n    this.clearRoute = () => {\n      this.setState({\n        planePositionHistory: []\n      });\n    };\n\n    this.clearDataLog = () => {\n      this.setState({\n        dataLog: []\n      });\n    };\n\n    this.download = (filename, text) => {\n      const pom = document.createElement('a');\n      pom.setAttribute('href', \"data:text/plain;charset=utf-8,\".concat(encodeURIComponent(text)));\n      pom.setAttribute('download', filename);\n\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents');\n        event.initEvent('click', true, true);\n        pom.dispatchEvent(event);\n      } else {\n        pom.click();\n      }\n    };\n\n    this.saveDataLog = () => {\n      const dataLog = this.state.dataLog;\n      console.info(\"Saving\", dataLog.length, \"records\");\n      let csv = \"TimeSent, Timereceived, Latitude, Longitude, GPS Altitude (ft), Velocity (m/s), GPS Accuracy,\" + \"Payload Prediction (ft), Payload Target Lat, Payload Target Long, CDA Prediction (ft), CDA Target Lat, CDA Target Long\";\n      dataLog.forEach(d => {\n        csv = \"\".concat(csv, \"\\n\").concat(d.timeSent, \", \").concat(d.timereceived, \", \").concat(d.latitude, \", \").concat(d.longitude, \", \").concat(d.altitude, \", \").concat(d.velocity, \", \").concat(d.accuracy, \",             \").concat(d.payloadPredictionDistance, \",\").concat(d.payloadLatLong[0], \", \").concat(d.payloadLatLong[1], \",\").concat(d.CDAPredictionDistance, \",\").concat(d.cdaLatLong[0], \", \").concat(d.cdaLatLong[1]);\n      });\n      this.download(\"Flight Log \".concat(new Date().toISOString(), \".csv\"), csv);\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentData = _this$state2.currentData,\n          dataLog = _this$state2.dataLog,\n          planePositionHistory = _this$state2.planePositionHistory;\n    return React.createElement(Tab.Pane, {\n      style: {\n        paddingLeft: 0,\n        paddingBottom: \"1em\",\n        border: \"none\",\n        height: \"100%\",\n        boxSizing: \"content-box\",\n        paddingRight: 0,\n        maxWidth: \"100%\",\n        backgroundColor: \"#f9f9f9\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        height: \"calc(100% - 2em)\",\n        overflow: \"hidden\",\n        overflowX: \"auto\",\n        paddingBottom: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MapArea, {\n      currentData: currentData,\n      planePositionHistory: planePositionHistory,\n      clearRoute: this.clearRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(DataArea, {\n      saveLog: this.saveDataLog,\n      clearLog: this.clearDataLog,\n      dataLog: dataLog,\n      receiveData: this.receiveData,\n      currentData: currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(DropArea, {\n      currentData: currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GroundStation;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/GroundStation/index.jsx"],"names":["React","Component","Tab","MapArea","DataArea","DropArea","predictPayload","predictCDA","predictLoc","getDirection","GroundStation","state","currentData","dataLog","planePositionHistory","oldDirection","lastPacketTime","receiveData","rawData","log","data","JSON","parse","time","Date","now","timeElapsed","flightData","timereceived","payloadPredictionDistance","altitude","velocity","headwind","CDAPredictionDistance","direction","payloadLatLong","cdaLatLong","push","latitude","longitude","setState","clearRoute","clearDataLog","download","filename","text","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","saveDataLog","console","info","length","csv","forEach","d","timeSent","accuracy","toISOString","render","paddingLeft","paddingBottom","border","height","boxSizing","paddingRight","maxWidth","backgroundColor","display","overflow","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport \"../MapArea/css/resize.css\";\r\nimport MapArea from \"../MapArea\";\r\nimport DataArea from \"../DataArea\";\r\nimport DropArea from \"../DropArea\";\r\n\r\nimport { predictPayload, predictCDA } from \"../../helpers/predictions\";\r\nimport { predictLoc } from \"../../helpers/location\";\r\nimport { getDirection } from \"../../helpers/direction\";\r\n\r\n\r\nclass GroundStation extends Component {\r\n  state = {\r\n    currentData: {},\r\n    dataLog: [],\r\n    planePositionHistory: [],\r\n    oldDirection: 0,\r\n  };\r\n\r\n  lastPacketTime = 0;\r\n\r\n  receiveData = (rawData) => {\r\n    const { currentData, planePositionHistory } = this.state;\r\n    const log = this.state.dataLog || [];\r\n    const data = JSON.parse(rawData);\r\n    const time = +Date.now();\r\n    const timeElapsed = time - this.lastPacketTime;\r\n    data.timeElapsed = timeElapsed;\r\n    this.lastPacketTime = time;\r\n    if (data.flightData) {\r\n      data.flightData.timereceived = (time / 1000) || 0;\r\n\r\n      data.flightData.payloadPredictionDistance = predictPayload(data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\r\n      data.flightData.CDAPredictionDistance = predictCDA(data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\r\n\r\n      data.flightData.direction = getDirection(currentData.flightData, data.flightData);\r\n\r\n      if (data.flightData.direction === 0) {\r\n        data.flightData.direction = this.state.oldDirection;\r\n      }\r\n\r\n      data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\r\n      data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\r\n\r\n      planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\r\n      log.push(data.flightData);\r\n\r\n      this.setState({ currentData: data, dataLog: log, planePositionHistory: planePositionHistory, oldDirection: data.flightData.direction });\r\n    }\r\n  };\r\n\r\n  clearRoute = () => {\r\n    this.setState({ planePositionHistory: [] });\r\n  };\r\n\r\n  clearDataLog = () => {\r\n    this.setState({ dataLog: [] });\r\n  };\r\n\r\n  download = (filename, text) => {\r\n    const pom = document.createElement('a');\r\n    pom.setAttribute('href', `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`);\r\n    pom.setAttribute('download', filename);\r\n\r\n    if (document.createEvent) {\r\n      const event = document.createEvent('MouseEvents');\r\n      event.initEvent('click', true, true);\r\n      pom.dispatchEvent(event);\r\n    } else {\r\n      pom.click();\r\n    }\r\n  };\r\n\r\n  saveDataLog = () => {\r\n    const { dataLog } = this.state;\r\n    console.info(\"Saving\", dataLog.length, \"records\");\r\n    let csv = \"TimeSent, Timereceived, Latitude, Longitude, GPS Altitude (ft), Velocity (m/s), GPS Accuracy,\"\r\n      + \"Payload Prediction (ft), Payload Target Lat, Payload Target Long, CDA Prediction (ft), CDA Target Lat, CDA Target Long\";\r\n    dataLog.forEach((d) => {\r\n      csv = `${csv}\\n${d.timeSent}, ${d.timereceived}, ${d.latitude}, ${d.longitude}, ${d.altitude}, ${d.velocity}, ${d.accuracy}, \\\r\n            ${d.payloadPredictionDistance},${d.payloadLatLong[0]}, ${d.payloadLatLong[1]},${d.CDAPredictionDistance},${d.cdaLatLong[0]}, ${d.cdaLatLong[1]}`;\r\n    });\r\n\r\n    this.download(`Flight Log ${new Date().toISOString()}.csv`, csv);\r\n  };\r\n\r\n  render() {\r\n    const { currentData, dataLog, planePositionHistory } = this.state;\r\n    return (\r\n      <Tab.Pane\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingBottom: \"1em\",\r\n          border: \"none\",\r\n          height: \"100%\",\r\n          boxSizing: \"content-box\",\r\n          paddingRight: 0,\r\n          maxWidth: \"100%\",\r\n          backgroundColor: \"#f9f9f9\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", height: \"calc(100% - 2em)\", overflow: \"hidden\", overflowX: \"auto\", paddingBottom: \"1em\" }}>\r\n          <MapArea\r\n            currentData={currentData}\r\n            planePositionHistory={planePositionHistory}\r\n            clearRoute={this.clearRoute}\r\n          />\r\n\r\n          <DataArea\r\n            saveLog={this.saveDataLog}\r\n            clearLog={this.clearDataLog}\r\n            dataLog={dataLog}\r\n            receiveData={this.receiveData}\r\n            currentData={currentData}\r\n          />\r\n          <DropArea currentData={currentData} />\r\n        </div>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroundStation;\r\n"]},"metadata":{},"sourceType":"module"}