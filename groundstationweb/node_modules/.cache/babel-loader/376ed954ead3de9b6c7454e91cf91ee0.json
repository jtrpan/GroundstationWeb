{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\MapArea\\\\components\\\\MapSettings.jsx\";\nimport React, { Component } from 'react';\nimport { Header, Checkbox, Segment, Button, Input, Popup } from \"semantic-ui-react\";\n\nclass MapSettings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      settingsOpen: true,\n      showPopup: false,\n      targLat: 49.258063,\n      targLng: -123.195911,\n      pTLat: 49.258063,\n      pTLng: -123.195911\n    };\n\n    this.toggleSettings = () => {\n      this.setState(state => {\n        return {\n          settingsOpen: !state.settingsOpen\n        };\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        showPopup: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.passTarget = () => {\n      const _this$state = this.state,\n            pTLat = _this$state.pTLat,\n            pTLng = _this$state.pTLng;\n      this.setState({\n        targLat: pTLat,\n        targLng: pTLng\n      });\n      this.props.setNewTarget(pTLat, pTLng);\n    };\n\n    this.setTLAT = event => {\n      if (!(event.target.value > 90 || event.target.value < -90)) {\n        this.setState({\n          pTLat: event.target.value\n        });\n      }\n    };\n\n    this.setTLNG = event => {\n      if (!(event.target.value > 180 || event.target.value < -180)) {\n        this.setState({\n          pTLng: event.target.value\n        });\n      }\n    };\n\n    this.openMarkup = () => {\n      const _this$props = this.props,\n            changeSettingsState = _this$props.changeSettingsState,\n            drawPlane = _this$props.drawPlane,\n            drawTarget = _this$props.drawTarget,\n            drawCDAPredictionPoint = _this$props.drawCDAPredictionPoint,\n            drawPayloadPredictionPoint = _this$props.drawPayloadPredictionPoint,\n            drawPlanePositionHistory = _this$props.drawPlanePositionHistory,\n            followPlane = _this$props.followPlane;\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"1em\",\n          minWidth: \"250px\",\n          minHeight: \"100%\",\n          maxHeight: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Map Settings:\"), React.createElement(Segment, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Display Settings:\"), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Plane\",\n        checked: drawPlane,\n        onChange: () => {\n          changeSettingsState({\n            drawPlane: !drawPlane\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Target\",\n        checked: drawTarget,\n        onChange: () => {\n          changeSettingsState({\n            drawTarget: !drawTarget\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"CDA Prediction Point\",\n        checked: drawCDAPredictionPoint,\n        onChange: () => {\n          changeSettingsState({\n            drawCDAPredictionPoint: !drawCDAPredictionPoint\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Payload Prediction Point\",\n        checked: drawPayloadPredictionPoint,\n        onChange: () => {\n          changeSettingsState({\n            drawPayloadPredictionPoint: !drawPayloadPredictionPoint\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Wind direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(Segment, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Movement:\"), React.createElement(Button, {\n        style: {\n          marginBottom: \"0.5em\"\n        },\n        basic: true,\n        content: \"Zoom camera to plane\",\n        onClick: this.props.zoomToPlane,\n        icon: \"plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          marginBottom: \"0.5em\"\n        },\n        basic: true,\n        content: \"Zoom camera to target\",\n        onClick: this.props.zoomToTarget,\n        icon: \"target\",\n        disabled: !followPlane,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Follow Plane\",\n        checked: !followPlane,\n        onChange: () => {\n          changeSettingsState({\n            followPlane: !followPlane\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Checkbox, {\n        toggle: true,\n        label: \"Trace Plane Route\",\n        checked: drawPlanePositionHistory,\n        onChange: () => {\n          changeSettingsState({\n            drawPlanePositionHistory: !drawPlanePositionHistory\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          marginBottom: \"0.5em\"\n        },\n        basic: true,\n        content: \"Clear Traced Route\",\n        onClick: this.props.clearRoute,\n        icon: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Segment, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Target:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Lattitude:\\xA0\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.targLat)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Longitude:\\xA0\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.targLng)), React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        trigger: React.createElement(Button, {\n          icon: \"target\",\n          basic: true,\n          content: \"Input Target Location\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }),\n        on: \"click\",\n        position: \"bottom center\",\n        open: this.state.showPopup,\n        onOpen: this.handleOpen,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Input, {\n        size: \"mini\",\n        label: {\n          basic: true,\n          content: 'Â°N'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Lattitude...\",\n        type: \"number\",\n        value: this.state.pTLat,\n        onChange: this.setTLAT,\n        style: {\n          marginBottom: \"0.5em\",\n          minWidth: \"200px\"\n        },\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Input, {\n        size: \"mini\",\n        label: {\n          basic: true,\n          content: 'Â°W'\n        },\n        labelPosition: \"right\",\n        placeholder: \"Longitude...\",\n        type: \"number\",\n        value: this.state.pTLng,\n        onChange: this.setTLNG,\n        style: {\n          marginBottom: \"0.5em\"\n        },\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"mini\",\n        fluid: true,\n        basic: true,\n        icon: \"check\",\n        primary: true,\n        content: \"Set Location\",\n        onClick: () => {\n          this.passTarget();\n          this.handleClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })))), React.createElement(Button, {\n        compact: true,\n        size: \"mini\",\n        icon: \"chevron left\",\n        content: \"Hide Settings\",\n        style: {\n          position: \"absolute\",\n          bottom: \"1em\"\n        },\n        onClick: this.toggleSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    };\n  }\n\n  render() {\n    const settingsOpen = this.state.settingsOpen;\n    if (settingsOpen) return this.openMarkup();else {\n      return React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"1em\",\n          bottom: \"0em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Button, {\n        compact: true,\n        size: \"mini\",\n        icon: \"chevron right\",\n        content: \"Show Settings\",\n        onClick: this.toggleSettings,\n        style: {\n          width: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default MapSettings;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/MapArea/components/MapSettings.jsx"],"names":["React","Component","Header","Checkbox","Segment","Button","Input","Popup","MapSettings","state","settingsOpen","showPopup","targLat","targLng","pTLat","pTLng","toggleSettings","setState","handleOpen","handleClose","passTarget","props","setNewTarget","setTLAT","event","target","value","setTLNG","openMarkup","changeSettingsState","drawPlane","drawTarget","drawCDAPredictionPoint","drawPayloadPredictionPoint","drawPlanePositionHistory","followPlane","padding","minWidth","minHeight","maxHeight","display","flexDirection","marginBottom","zoomToPlane","zoomToTarget","clearRoute","basic","content","position","bottom","render","right","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Header, Checkbox, Segment, Button, Input, Popup } from \"semantic-ui-react\";\n\nclass MapSettings extends Component {\n  state = {\n    settingsOpen: true,\n    showPopup: false,\n    targLat: 49.258063,\n    targLng: -123.195911,\n    pTLat: 49.258063,\n    pTLng: -123.195911,\n  };\n\n  toggleSettings = () => {\n    this.setState((state) => { return { settingsOpen: !state.settingsOpen }; });\n  };\n\n  handleOpen = () => {\n    this.setState({ showPopup: true });\n  };\n\n  handleClose = () => {\n    this.setState({ showPopup: false });\n  };\n\n  passTarget = () => {\n    const { pTLat, pTLng } = this.state;\n    this.setState({ targLat: pTLat, targLng: pTLng });\n    this.props.setNewTarget(pTLat, pTLng);\n  };\n\n  setTLAT = (event) => {\n    if (!(event.target.value > 90 || event.target.value < -90)) {\n      this.setState({ pTLat: event.target.value });\n    }\n  };\n\n  setTLNG = (event) => {\n    if (!(event.target.value > 180 || event.target.value < -180)) {\n      this.setState({ pTLng: event.target.value });\n    }\n  };\n\n  openMarkup = () => {\n    const { changeSettingsState, drawPlane, drawTarget, drawCDAPredictionPoint, drawPayloadPredictionPoint, drawPlanePositionHistory, followPlane } = this.props;\n    return (\n      <div style={{ padding: \"1em\", minWidth: \"250px\", minHeight: \"100%\", maxHeight: \"100%\" }}>\n        <Header as=\"h4\">Map Settings:</Header>\n        <Segment style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Header as=\"h5\">Display Settings:</Header>\n          <Checkbox\n            toggle\n            label=\"Plane\"\n            checked={drawPlane}\n            onChange={() => { changeSettingsState({ drawPlane: !drawPlane }); }}\n          />\n          <Checkbox\n            toggle\n            label=\"Target\"\n            checked={drawTarget}\n            onChange={() => { changeSettingsState({ drawTarget: !drawTarget }); }}\n          />\n          <Checkbox\n            toggle\n            label=\"CDA Prediction Point\"\n            checked={drawCDAPredictionPoint}\n            onChange={() => { changeSettingsState({ drawCDAPredictionPoint: !drawCDAPredictionPoint }); }}\n          />\n          <Checkbox\n            toggle\n            label=\"Payload Prediction Point\"\n            checked={drawPayloadPredictionPoint}\n            onChange={() => { changeSettingsState({ drawPayloadPredictionPoint: !drawPayloadPredictionPoint }); }}\n          />\n          <Checkbox\n            toggle\n            label=\"Wind direction\"\n          />\n          <Checkbox\n            toggle\n            label=\"Heading\"\n          />\n        </Segment>\n        <Segment style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Header as=\"h5\">Movement:</Header>\n          <Button\n            style={{ marginBottom: \"0.5em\" }}\n            basic\n            content=\"Zoom camera to plane\"\n            onClick={this.props.zoomToPlane}\n            icon=\"plane\"\n          />\n          <Button\n            style={{ marginBottom: \"0.5em\" }}\n            basic\n            content=\"Zoom camera to target\"\n            onClick={this.props.zoomToTarget}\n            icon=\"target\"\n            disabled={!followPlane}\n          />\n          <Checkbox\n            toggle\n            label=\"Follow Plane\"\n            checked={!followPlane}\n            onChange={() => {\n              changeSettingsState({ followPlane: !followPlane });\n            }}\n          />\n          <Checkbox\n            toggle\n            label=\"Trace Plane Route\"\n            checked={drawPlanePositionHistory}\n            onChange={() => { changeSettingsState({ drawPlanePositionHistory: !drawPlanePositionHistory }); }}\n          />\n          <Button\n            style={{ marginBottom: \"0.5em\" }}\n            basic\n            content=\"Clear Traced Route\"\n            onClick={this.props.clearRoute}\n            icon=\"delete\"\n          />\n        </Segment>\n\n        <Segment style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Header as=\"h5\">Target:</Header>\n          <p>\n            Lattitude:&nbsp;\n            <strong>{this.state.targLat}</strong>\n          </p>\n          <p>\n            Longitude:&nbsp;\n            <strong>{this.state.targLng}</strong>\n          </p>\n          <React.Fragment>\n            <Popup\n              trigger={<Button icon=\"target\" basic content=\"Input Target Location\" />}\n              on=\"click\"\n              position=\"bottom center\"\n              open={this.state.showPopup}\n              onOpen={this.handleOpen}\n              onClose={this.handleClose}\n            >\n              <Input\n                size=\"mini\"\n                label={{ basic: true, content: 'Â°N' }}\n                labelPosition=\"right\"\n                placeholder=\"Lattitude...\"\n                type=\"number\"\n                value={this.state.pTLat}\n                onChange={this.setTLAT}\n                style={{ marginBottom: \"0.5em\", minWidth: \"200px\" }}\n                fluid\n              />\n              <Input\n                size=\"mini\"\n                label={{ basic: true, content: 'Â°W' }}\n                labelPosition=\"right\"\n                placeholder=\"Longitude...\"\n                type=\"number\"\n                value={this.state.pTLng}\n                onChange={this.setTLNG}\n                style={{ marginBottom: \"0.5em\" }}\n                fluid\n              />\n              <Button\n                size=\"mini\"\n                fluid\n                basic\n                icon=\"check\"\n                primary\n                content=\"Set Location\"\n                onClick={() => {\n                  this.passTarget();\n                  this.handleClose();\n                }}\n              />\n            </Popup>\n          </React.Fragment>\n        </Segment>\n\n        <Button\n          compact\n          size=\"mini\"\n          icon=\"chevron left\"\n          content=\"Hide Settings\"\n          style={{\n            position: \"absolute\",\n            bottom: \"1em\",\n          }}\n          onClick={this.toggleSettings}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { settingsOpen } = this.state;\n    if (settingsOpen) return this.openMarkup();\n    else {\n      return (\n        <div style={{ position: \"absolute\", right: \"1em\", bottom: \"0em\" }}>\n          <Button\n            compact\n            size=\"mini\"\n            icon=\"chevron right\"\n            content=\"Show Settings\"\n            onClick={this.toggleSettings}\n            style={{ width: \"100px\" }}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MapSettings;\n"]},"metadata":{},"sourceType":"module"}