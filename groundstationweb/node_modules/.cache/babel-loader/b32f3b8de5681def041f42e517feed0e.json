{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\MapArea\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Segment } from \"semantic-ui-react\";\nimport AeroMap from \"./components/AeroMap\";\nimport MapSettings from \"./components/MapSettings\";\nimport \"./css/style.css\";\n\nclass MapArea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapLat: 49.258063,\n      mapLong: -123.195911,\n      targLat: null,\n      targLng: null,\n      followPlane: false,\n      drawPlane: true,\n      drawTarget: true,\n      drawCDAPredictionPoint: true,\n      drawPayloadPredictionPoint: true,\n      drawPlanePositionHistory: true,\n      zoom: 10\n    };\n\n    this.changeSettingsState = state => {\n      this.setState(state);\n    };\n\n    this.zoomToPlane = () => {\n      const currentData = this.props.currentData;\n      if (!currentData || !currentData.flightData) return;\n      const _currentData$flightDa = currentData.flightData,\n            latitude = _currentData$flightDa.latitude,\n            longitude = _currentData$flightDa.longitude;\n      const eps = Math.random() * 0.00000001;\n      this.setState({\n        mapLat: latitude + eps,\n        mapLong: longitude + eps,\n        zoom: 19 + eps\n      });\n    };\n\n    this.zoomToTarget = () => {\n      if (this.state.targLat == null || this.state.targLng == null) return;\n      const eps = Math.random() * 0.00000001;\n      this.setState(state => {\n        return {\n          mapLat: state.targLat + eps,\n          mapLong: state.targLng + eps,\n          zoom: 19 + eps\n        };\n      });\n    };\n\n    this.setNewTarget = (inputLat, inputLng) => {\n      this.setState({\n        targLat: inputLat,\n        targLng: inputLng\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentData = _this$props.currentData,\n          planePositionHistory = _this$props.planePositionHistory;\n    const _this$state = this.state,\n          mapLat = _this$state.mapLat,\n          mapLong = _this$state.mapLong,\n          targLat = _this$state.targLat,\n          targLng = _this$state.targLng,\n          zoom = _this$state.zoom,\n          followPlane = _this$state.followPlane,\n          drawPlane = _this$state.drawPlane,\n          drawTarget = _this$state.drawTarget,\n          drawCDAPredictionPoint = _this$state.drawCDAPredictionPoint,\n          drawPayloadPredictionPoint = _this$state.drawPayloadPredictionPoint,\n          drawPlanePositionHistory = _this$state.drawPlanePositionHistory;\n    const dataAvailable = currentData && currentData.flightData;\n    const planeLat = dataAvailable ? currentData.flightData.latitude : null;\n    const planeLong = dataAvailable ? currentData.flightData.longitude : null;\n    const payloadLat = dataAvailable ? currentData.flightData.payloadLatLong[0] : null;\n    const payloadLong = dataAvailable ? currentData.flightData.payloadLatLong[1] : null;\n    const cdaLat = dataAvailable ? currentData.flightData.cdaLatLong[0] : null;\n    const cdaLong = dataAvailable ? currentData.flightData.cdaLatLong[1] : null;\n\n    if (this.state.followPlane) {\n      if (mapLat !== planeLat || mapLong !== planeLong) {\n        this.setState({\n          mapLat: planeLat,\n          mapLong: planeLong\n        });\n      }\n    }\n\n    return React.createElement(Segment, {\n      style: {\n        padding: \"0px\",\n        display: \"flex\",\n        borderLeft: \"none\",\n        height: \"100%\",\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(AeroMap, {\n      planeLat: planeLat,\n      planeLong: planeLong,\n      mapLat: mapLat,\n      mapLong: mapLong,\n      targLat: targLat,\n      targLng: targLng,\n      zoom: zoom,\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      drawPlanePositionHistory: drawPlanePositionHistory,\n      drawCDAPredictionPoint: drawCDAPredictionPoint,\n      drawPayloadPredictionPoint: drawPayloadPredictionPoint,\n      payloadLat: payloadLat,\n      payloadLong: payloadLong,\n      cdaLat: cdaLat,\n      cdaLong: cdaLong,\n      planePositionHistory: planePositionHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(MapSettings, {\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      drawCDAPredictionPoint: drawCDAPredictionPoint,\n      drawPayloadPredictionPoint: drawPayloadPredictionPoint,\n      drawPlanePositionHistory: drawPlanePositionHistory,\n      followPlane: followPlane,\n      zoomToPlane: this.zoomToPlane,\n      zoomToTarget: this.zoomToTarget,\n      changeSettingsState: this.changeSettingsState,\n      setNewTarget: this.setNewTarget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MapArea;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/MapArea/index.jsx"],"names":["React","Component","Segment","AeroMap","MapSettings","MapArea","state","mapLat","mapLong","targLat","targLng","followPlane","drawPlane","drawTarget","drawCDAPredictionPoint","drawPayloadPredictionPoint","drawPlanePositionHistory","zoom","changeSettingsState","setState","zoomToPlane","currentData","props","flightData","latitude","longitude","eps","Math","random","zoomToTarget","setNewTarget","inputLat","inputLng","render","planePositionHistory","dataAvailable","planeLat","planeLong","payloadLat","payloadLatLong","payloadLong","cdaLat","cdaLatLong","cdaLong","padding","display","borderLeft","height","borderTopLeftRadius","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Segment } from \"semantic-ui-react\";\nimport AeroMap from \"./components/AeroMap\";\nimport MapSettings from \"./components/MapSettings\";\nimport \"./css/style.css\";\n\nclass MapArea extends Component {\n  state = {\n    mapLat: 49.258063,\n    mapLong: -123.195911,\n    targLat: null,\n    targLng: null,\n    followPlane: false,\n    drawPlane: true,\n    drawTarget: true,\n    drawCDAPredictionPoint: true,\n    drawPayloadPredictionPoint: true,\n    drawPlanePositionHistory: true,\n    zoom: 10,\n  };\n\n  changeSettingsState = (state) => {\n    this.setState(state);\n  };\n\n  zoomToPlane = () => {\n    const { currentData } = this.props;\n    if (!currentData || !currentData.flightData) return;\n    const { latitude, longitude } = currentData.flightData;\n    const eps = Math.random()*0.00000001;\n    this.setState({ mapLat: latitude+eps, mapLong: longitude+eps, zoom: 19+eps });\n  };\n\n  zoomToTarget = () => {\n    if (this.state.targLat == null || this.state.targLng == null) return;\n    const eps = Math.random()*0.00000001;\n    this.setState((state) => { return { mapLat: state.targLat + eps, mapLong: state.targLng + eps, zoom: 19+eps }; });\n  };\n\n  setNewTarget = (inputLat, inputLng) => {\n    this.setState({\n      targLat: inputLat,\n      targLng: inputLng,\n    });\n  };\n\n  render() {\n    const { currentData, planePositionHistory } = this.props;\n    const { mapLat, mapLong, targLat, targLng, zoom, followPlane, drawPlane, drawTarget, drawCDAPredictionPoint, drawPayloadPredictionPoint, drawPlanePositionHistory } = this.state;\n    const dataAvailable = currentData && currentData.flightData;\n    const planeLat = dataAvailable ? currentData.flightData.latitude : null;\n    const planeLong = dataAvailable ? currentData.flightData.longitude : null;\n    const payloadLat = dataAvailable ? currentData.flightData.payloadLatLong[0] : null;\n    const payloadLong = dataAvailable ? currentData.flightData.payloadLatLong[1] : null;\n    const cdaLat = dataAvailable ? currentData.flightData.cdaLatLong[0] : null;\n    const cdaLong = dataAvailable ? currentData.flightData.cdaLatLong[1] : null;\n\n    if (this.state.followPlane) {\n      if (mapLat !== planeLat || mapLong !== planeLong) {\n        this.setState({ mapLat: planeLat, mapLong: planeLong });\n      }\n    }\n\n    return (\n      <Segment\n        style={{\n          padding: \"0px\",\n          display: \"flex\",\n          borderLeft: \"none\",\n          height: \"100%\",\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n        }}\n      >\n\n        <AeroMap\n          planeLat={planeLat}\n          planeLong={planeLong}\n          mapLat={mapLat}\n          mapLong={mapLong}\n          targLat={targLat}\n          targLng={targLng}\n          zoom={zoom}\n          drawPlane={drawPlane}\n          drawTarget={drawTarget}\n          drawPlanePositionHistory={drawPlanePositionHistory}\n          drawCDAPredictionPoint={drawCDAPredictionPoint}\n          drawPayloadPredictionPoint={drawPayloadPredictionPoint}\n          payloadLat={payloadLat}\n          payloadLong={payloadLong}\n          cdaLat={cdaLat}\n          cdaLong={cdaLong}\n          planePositionHistory={planePositionHistory}\n\n        />\n\n        <MapSettings\n          drawPlane={drawPlane}\n          drawTarget={drawTarget}\n          drawCDAPredictionPoint={drawCDAPredictionPoint}\n          drawPayloadPredictionPoint={drawPayloadPredictionPoint}\n          drawPlanePositionHistory={drawPlanePositionHistory}\n          followPlane={followPlane}\n          zoomToPlane={this.zoomToPlane}\n          zoomToTarget={this.zoomToTarget}\n          changeSettingsState={this.changeSettingsState}\n          setNewTarget={this.setNewTarget}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MapArea;\n"]},"metadata":{},"sourceType":"module"}