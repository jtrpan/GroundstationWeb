{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\MapArea\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Segment } from \"semantic-ui-react\";\nimport AeroMap from \"./components/AeroMap\";\nimport MapSettings from \"./components/MapSettings\";\nimport \"./css/style.css\";\n\nclass MapArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSettingsState = state => {\n      this.setState(state);\n    };\n\n    this.zoomToPlane = () => {\n      const currentData = this.props.currentData;\n      if (!currentData || !currentData.flightData) return;\n      const _currentData$flightDa = currentData.flightData,\n            latitude = _currentData$flightDa.latitude,\n            longitude = _currentData$flightDa.longitude;\n      const eps = Math.random() * 0.00000001;\n      this.setState({\n        mapLat: latitude + eps,\n        mapLong: longitude + eps,\n        zoom: 19 + eps\n      });\n    };\n\n    this.zoomToTarget = () => {\n      if (this.state.targLat == null || this.state.targLng == null) return;\n      const eps = Math.random() * 0.00000001;\n      this.setState({\n        mapLat: this.state.targLat + eps,\n        mapLong: this.state.targLng + eps,\n        zoom: 19 + eps\n      });\n    };\n\n    this.setNewTarget = (inputLat, inputLng) => {\n      this.setState({\n        targLat: inputLat,\n        targLng: inputLng\n      });\n    };\n\n    this.state = {\n      mapLat: 49.258063,\n      mapLong: -123.195911,\n      targLat: null,\n      targLng: null,\n      followPlane: true,\n      drawPlane: true,\n      drawTarget: true,\n      drawPredictionPoint: true,\n      zoom: 10\n    };\n    this.planeLat = 0;\n    this.planeLong = 0;\n    this.payloadLat = 0;\n    this.payloadLong = 0;\n    this.cdaLat = 0;\n    this.cdaLong = 0;\n  }\n\n  componentWillUpdate() {}\n\n  render() {\n    const _this$props = this.props,\n          height = _this$props.height,\n          currentData = _this$props.currentData;\n    const _this$state = this.state,\n          mapLat = _this$state.mapLat,\n          mapLong = _this$state.mapLong,\n          targLat = _this$state.targLat,\n          targLng = _this$state.targLng,\n          zoom = _this$state.zoom,\n          followPlane = _this$state.followPlane,\n          drawPlane = _this$state.drawPlane,\n          drawTarget = _this$state.drawTarget,\n          drawPredictionPoint = _this$state.drawPredictionPoint;\n\n    if (currentData && currentData.flightData) {\n      this.planeLat = currentData.flightData.latitude;\n      this.planeLong = currentData.flightData.longitude;\n      this.payloadLat = currentData.flightData.payloadLatLong[0];\n      this.payloadLong = currentData.flightData.payloadLatLong[1];\n      this.cdaLat = currentData.flightData.cdaLatLong[0];\n      this.cdaLong = currentData.flightData.cdaLatLong[1];\n    }\n\n    if (!this.state.followPlane) {\n      if (this.state.mapLat != this.planeLat || this.state.mapLong != this.planeLong) {\n        this.setState({\n          mapLat: this.planeLat,\n          mapLong: this.planeLong\n        });\n      }\n    }\n\n    return React.createElement(Segment, {\n      style: {\n        padding: \"0px\",\n        display: \"flex\",\n        borderLeft: \"none\",\n        height: \"100%\",\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(AeroMap, {\n      planeLat: this.planeLat,\n      planeLong: this.planeLong,\n      mapLat: mapLat,\n      mapLong: mapLong,\n      mapHeight: height - 42,\n      targLat: targLat,\n      targLng: targLng,\n      zoom: zoom,\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      drawPredictionPoint: drawPredictionPoint,\n      payloadLat: this.payloadLat,\n      payloadLong: this.payloadLong,\n      cdaLat: this.cdaLat,\n      cdaLong: this.cdaLong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(MapSettings, {\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      drawPredictionPoint: drawPredictionPoint,\n      followPlane: followPlane,\n      zoomToPlane: this.zoomToPlane,\n      zoomToTarget: this.zoomToTarget,\n      changeSettingsState: this.changeSettingsState,\n      setNewTarget: this.setNewTarget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MapArea;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/MapArea/index.js"],"names":["React","Component","Segment","AeroMap","MapSettings","MapArea","constructor","props","changeSettingsState","state","setState","zoomToPlane","currentData","flightData","latitude","longitude","eps","Math","random","mapLat","mapLong","zoom","zoomToTarget","targLat","targLng","setNewTarget","inputLat","inputLng","followPlane","drawPlane","drawTarget","drawPredictionPoint","planeLat","planeLong","payloadLat","payloadLong","cdaLat","cdaLong","componentWillUpdate","render","height","payloadLatLong","cdaLatLong","padding","display","borderLeft","borderTopLeftRadius","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Segment } from \"semantic-ui-react\";\nimport AeroMap from \"./components/AeroMap\";\nimport MapSettings from \"./components/MapSettings\";\nimport \"./css/style.css\";\n\nclass MapArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapLat: 49.258063,\n      mapLong: -123.195911,\n      targLat: null,\n      targLng: null,\n      followPlane: true,\n      drawPlane: true,\n      drawTarget: true,\n      drawPredictionPoint: true,\n      zoom: 10,\n    };\n    this.planeLat = 0;\n    this.planeLong = 0;\n    this.payloadLat = 0;\n    this.payloadLong = 0;\n    this.cdaLat = 0;\n    this.cdaLong = 0;\n  }\n\n  componentWillUpdate() {\n\n  }\n\n    changeSettingsState = (state) => {\n      this.setState(state);\n    };\n\n    zoomToPlane = () => {\n      const { currentData } = this.props;\n      if (!currentData || !currentData.flightData) return;\n      const { latitude, longitude } = currentData.flightData;\n      const eps = Math.random()*0.00000001;\n      this.setState({ mapLat: latitude+eps, mapLong: longitude+eps, zoom: 19+eps });\n    };\n\n    zoomToTarget = () => {\n      if (this.state.targLat == null || this.state.targLng == null) return;\n      const eps = Math.random()*0.00000001;\n      this.setState({ mapLat: this.state.targLat + eps, mapLong: this.state.targLng + eps, zoom: 19+eps });\n    };\n\n    setNewTarget = (inputLat, inputLng) => {\n      this.setState({\n        targLat: inputLat,\n        targLng: inputLng,\n      });\n    }\n\n    render() {\n      const { height, currentData } = this.props;\n      const { mapLat, mapLong, targLat, targLng, zoom, followPlane, drawPlane, drawTarget, drawPredictionPoint } = this.state;\n      if (currentData && currentData.flightData) {\n        this.planeLat = currentData.flightData.latitude;\n        this.planeLong = currentData.flightData.longitude;\n        this.payloadLat = currentData.flightData.payloadLatLong[0];\n        this.payloadLong = currentData.flightData.payloadLatLong[1];\n        this.cdaLat = currentData.flightData.cdaLatLong[0];\n        this.cdaLong = currentData.flightData.cdaLatLong[1];\n      }\n      if (!this.state.followPlane) {\n        if ((this.state.mapLat != this.planeLat) || (this.state.mapLong != this.planeLong)) {\n          this.setState({ mapLat: this.planeLat, mapLong: this.planeLong });\n        }\n      }\n\n      return (\n        <Segment\n          style={{\n            padding: \"0px\",\n            display: \"flex\",\n            borderLeft: \"none\",\n            height: \"100%\",\n            borderTopLeftRadius: 0,\n            borderBottomLeftRadius: 0,\n          }}\n        >\n\n          <AeroMap\n            planeLat={this.planeLat}\n            planeLong={this.planeLong}\n            mapLat={mapLat}\n            mapLong={mapLong}\n            mapHeight={height - 42}\n            targLat={targLat}\n            targLng={targLng}\n            zoom={zoom}\n            drawPlane={drawPlane}\n            drawTarget={drawTarget}\n            drawPredictionPoint={drawPredictionPoint}\n            payloadLat={this.payloadLat}\n            payloadLong={this.payloadLong}\n            cdaLat={this.cdaLat}\n            cdaLong={this.cdaLong}\n          />\n\n          <MapSettings\n            drawPlane={drawPlane}\n            drawTarget={drawTarget}\n            drawPredictionPoint={drawPredictionPoint}\n            followPlane={followPlane}\n            zoomToPlane={this.zoomToPlane}\n            zoomToTarget={this.zoomToTarget}\n            changeSettingsState={this.changeSettingsState}\n            setNewTarget={this.setNewTarget}\n          />\n        </Segment>\n      );\n    }\n}\n\nexport default MapArea;\n"]},"metadata":{},"sourceType":"module"}