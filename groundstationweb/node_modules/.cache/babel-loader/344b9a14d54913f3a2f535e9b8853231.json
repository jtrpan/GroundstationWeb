{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Documents\\\\UBC\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\GroundStation\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport \"../MapArea/css/resize.css\";\nimport MapArea from \"../MapArea\";\nimport DataArea from \"../DataArea\";\nimport DropArea from \"../DropArea\";\nimport WebSocketManager from \"../../helpers/WebSocketManager\";\nimport { predictCDA, predictPayload } from \"../../helpers/predictions\";\nimport { getDirection } from \"../../helpers/direction\";\nimport { predictLoc } from \"../../helpers/location\";\n\nclass GroundStation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: {},\n      isConnected: false,\n      cargoDropped: false,\n      oneDropped: false,\n      twoDropped: false\n    };\n    this.dataLog = [];\n    this.planePositionHistory = [];\n\n    this.setDropped = (drop, value) => {\n      const change = {};\n      change[drop] = value;\n      this.setState(change);\n    };\n\n    this.setData = rawData => {\n      const data = JSON.parse(rawData);\n      const time = +Date.now();\n      const timeElapsed = time - this.state.lastPacketTime;\n      const _this$state = this.state,\n            currentData = _this$state.currentData,\n            cargoDropped = _this$state.cargoDropped,\n            oneDropped = _this$state.oneDropped,\n            twoDropped = _this$state.twoDropped;\n      data.timeElapsed = timeElapsed;\n      this.state.lastPacketTime = time;\n\n      if (data.flightData) {\n        data.flightData.timeRecieved = time / 1000 || 0;\n        data.flightData.payloadPredictionDistance = predictPayload(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.CDAPredictionDistance = predictCDA(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.direction = getDirection(currentData.flightData, data.flightData);\n\n        if (data.flightData.direction === 0) {\n          data.flightData.direction = this.state.oldDirection;\n        }\n\n        this.state.oldDirection = data.flightData.direction;\n        data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\n        data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\n        data.flightData.cargoDropped = cargoDropped;\n        data.flightData.oneDropped = oneDropped;\n        data.flightData.twoDropped = twoDropped;\n        this.planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\n        this.dataLog.push(data.flightData);\n        this.setState({\n          currentData: data\n        });\n      }\n    };\n\n    this.setConnected = isConnected => {\n      this.setState({\n        isConnected\n      });\n    };\n\n    this.getConnected = () => {\n      return this.state.isConnected;\n    };\n\n    this.webSocketManager = new WebSocketManager(this.setData, this.setConnected, this.getConnected);\n\n    this.clearDataLog = () => {\n      this.dataLog = [];\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentData = _this$state2.currentData,\n          isConnected = _this$state2.isConnected,\n          cargoDropped = _this$state2.cargoDropped,\n          oneDropped = _this$state2.oneDropped,\n          twoDropped = _this$state2.twoDropped;\n    return React.createElement(\"div\", {\n      style: {\n        paddingLeft: 0,\n        paddingBottom: \"1em\",\n        paddingTop: \"1em\",\n        border: \"none\",\n        height: \"100%\",\n        boxSizing: \"content-box\",\n        paddingRight: 0,\n        maxWidth: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        height: \"calc(100% - 2em)\",\n        overflow: \"hidden\",\n        overflowX: \"auto\",\n        paddingBottom: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(MapArea, {\n      currentData: currentData,\n      planePositionHistory: this.planePositionHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(DataArea, {\n      dataLog: this.dataLog,\n      saveLog: this.saveDataLog,\n      clearLog: this.clearDataLog,\n      receiveData: this.receiveData,\n      currentData: currentData,\n      webSocketManager: this.webSocketManager,\n      isConnected: isConnected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(DropArea, {\n      currentData: currentData,\n      webSocketManager: this.webSocketManager,\n      isConnected: isConnected,\n      cargoDropped: cargoDropped,\n      oneDropped: oneDropped,\n      twoDropped: twoDropped,\n      setDropped: this.setDropped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GroundStation;","map":{"version":3,"sources":["C:/Users/James Pan/Documents/UBC/demo/groundstationweb/src/components/GroundStation/index.jsx"],"names":["React","Component","MapArea","DataArea","DropArea","WebSocketManager","predictCDA","predictPayload","getDirection","predictLoc","GroundStation","state","currentData","isConnected","cargoDropped","oneDropped","twoDropped","dataLog","planePositionHistory","setDropped","drop","value","change","setState","setData","rawData","data","JSON","parse","time","Date","now","timeElapsed","lastPacketTime","flightData","timeRecieved","payloadPredictionDistance","pitch","altitude","velocity","headwind","CDAPredictionDistance","direction","oldDirection","payloadLatLong","cdaLatLong","push","latitude","longitude","setConnected","getConnected","webSocketManager","clearDataLog","render","paddingLeft","paddingBottom","paddingTop","border","height","boxSizing","paddingRight","maxWidth","display","overflow","overflowX","saveDataLog","receiveData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"../MapArea/css/resize.css\";\nimport MapArea from \"../MapArea\";\nimport DataArea from \"../DataArea\";\nimport DropArea from \"../DropArea\";\nimport WebSocketManager from \"../../helpers/WebSocketManager\";\nimport { predictCDA, predictPayload } from \"../../helpers/predictions\";\nimport { getDirection } from \"../../helpers/direction\";\nimport { predictLoc } from \"../../helpers/location\";\n\n\nclass GroundStation extends Component {\n    state = {\n        currentData: {},\n        isConnected: false,\n        cargoDropped: false,\n        oneDropped: false,\n        twoDropped: false,\n    };\n\n    dataLog = [];\n\n    planePositionHistory = [];\n\n    setDropped = (drop, value) => {\n        const change = {};\n        change[drop] = value;\n        this.setState(change);\n    };\n\n    setData = (rawData) => {\n        const data = JSON.parse(rawData);\n        const time = +Date.now();\n        const timeElapsed = time - this.state.lastPacketTime;\n        const { currentData, cargoDropped, oneDropped, twoDropped } = this.state;\n        data.timeElapsed = timeElapsed;\n        this.state.lastPacketTime = time;\n        if (data.flightData) {\n            data.flightData.timeRecieved = (time / 1000) || 0;\n\n            data.flightData.payloadPredictionDistance = predictPayload(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n            data.flightData.CDAPredictionDistance = predictCDA(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n\n            data.flightData.direction = getDirection(currentData.flightData, data.flightData);\n\n            if(data.flightData.direction === 0) {\n                data.flightData.direction = this.state.oldDirection;\n            }\n\n            this.state.oldDirection = data.flightData.direction;\n\n            data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\n            data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\n\n            data.flightData.cargoDropped = cargoDropped;\n            data.flightData.oneDropped = oneDropped;\n            data.flightData.twoDropped = twoDropped;\n\n            this.planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\n            this.dataLog.push(data.flightData);\n            this.setState({ currentData: data });\n        }\n    }\n\n    setConnected = (isConnected) => {\n        this.setState({ isConnected });\n    }\n\n    getConnected = () => {\n        return this.state.isConnected;\n    }\n\n    webSocketManager = new WebSocketManager(this.setData, this.setConnected, this.getConnected);\n\n    clearDataLog = () => {\n        this.dataLog = [];\n    };\n\n    render() {\n        const { currentData, isConnected, cargoDropped, oneDropped, twoDropped } = this.state;\n        return (\n            <div\n                style={{\n                    paddingLeft: 0,\n                    paddingBottom: \"1em\",\n                    paddingTop: \"1em\",\n                    border: \"none\",\n                    height: \"100%\",\n                    boxSizing: \"content-box\",\n                    paddingRight: 0,\n                    maxWidth: \"100%\",\n                }}\n            >\n                <div style={{ display: \"flex\", height: \"calc(100% - 2em)\", overflow: \"hidden\", overflowX: \"auto\", paddingBottom: \"1em\" }}>\n                    <MapArea currentData={currentData} planePositionHistory={this.planePositionHistory} />\n                    <DataArea\n                        dataLog={this.dataLog}\n                        saveLog={this.saveDataLog}\n                        clearLog={this.clearDataLog}\n                        receiveData={this.receiveData}\n                        currentData={currentData}\n                        webSocketManager={this.webSocketManager}\n                        isConnected={isConnected}\n                    />\n                    <DropArea\n                        currentData={currentData}\n                        webSocketManager={this.webSocketManager}\n                        isConnected={isConnected}\n                        cargoDropped={cargoDropped}\n                        oneDropped={oneDropped}\n                        twoDropped={twoDropped}\n                        setDropped={this.setDropped}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GroundStation;\n"]},"metadata":{},"sourceType":"module"}