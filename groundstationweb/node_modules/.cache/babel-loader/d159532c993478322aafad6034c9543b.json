{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\DataArea\\\\components\\\\DataDisplay.js\";\nimport React, { Component } from 'react';\nimport { Segment, Header } from \"semantic-ui-react\";\n\nclass DataDisplay extends Component {\n  render() {\n    const _this$props = this.props,\n          recieveData = _this$props.recieveData,\n          currentData = _this$props.currentData;\n    const flightData = currentData.flightData;\n    if (!flightData) return null;\n    return React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        overflow: \"hidden\",\n        fontSize: \"12pt\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"flight_data_table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, Math.round(flightData.latitude * 10000) / 10000)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Longitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, Math.round(flightData.longitude * 10000) / 10000)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Altitude GSP (ft)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, Math.round(flightData.altitude * 100) / 100)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Velocity (m/s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Math.round(flightData.velocity * 100) / 100)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Bearing\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, flightData.bearing)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"TimeElapsed\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, currentData.timeElapsed)))));\n  }\n\n}\n\nexport default DataDisplay;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/DataArea/components/DataDisplay.js"],"names":["React","Component","Segment","Header","DataDisplay","render","props","recieveData","currentData","flightData","width","overflow","fontSize","Math","round","latitude","longitude","altitude","velocity","bearing","timeElapsed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEhCI,EAAAA,MAAM,GAAE;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACIC,WADJ,eACIA,WADJ;AAAA,UACiBC,WADjB,eACiBA,WADjB;AAAA,UAEIC,UAFJ,GAEmBD,WAFnB,CAEIC,UAFJ;AAGJ,QAAG,CAACA,UAAJ,EAAgB,OAAO,IAAP;AAChB,WACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,QAA3B;AAAqCC,QAAAA,QAAQ,EAAE;AAA/C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACM,QAAX,GAAoB,KAA/B,IAAsC,KAA3C,CAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACO,SAAX,GAAqB,KAAhC,IAAuC,KAA5C,CAFJ,CALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACQ,QAAX,GAAoB,GAA/B,IAAoC,GAAzC,CAFJ,CATJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACS,QAAX,GAAoB,GAA/B,IAAoC,GAAzC,CAFJ,CAbJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,UAAU,CAACU,OAAhB,CAFJ,CAjBJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,WAAW,CAACY,WAAjB,CAFJ,CArBJ,CADJ,CADJ,CADJ;AAgCH;;AAtC+B;;AAyCpC,eAAehB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Segment, Header } from \"semantic-ui-react\";\r\n\r\nclass DataDisplay extends Component {\r\n\r\n    render(){\r\n        const { recieveData, currentData } = this.props;\r\n        const { flightData } = currentData;\r\n        if(!flightData) return null;\r\n        return (\r\n            <div style={{ width: \"100%\", overflow: \"hidden\", fontSize: \"12pt\" }}>\r\n                <table id=\"flight_data_table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Latitude</td>\r\n                            <td>{Math.round(flightData.latitude*10000)/10000}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Longitude</td>\r\n                            <td>{Math.round(flightData.longitude*10000)/10000}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Altitude GSP (ft)</td>\r\n                            <td>{Math.round(flightData.altitude*100)/100}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Velocity (m/s)</td>\r\n                            <td>{Math.round(flightData.velocity*100)/100}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Bearing</td>\r\n                            <td>{flightData.bearing}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TimeElapsed</td>\r\n                            <td>{currentData.timeElapsed}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataDisplay;\r\n\r\n"]},"metadata":{},"sourceType":"module"}