{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Documents\\\\UBC\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\GroundStation\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport \"../MapArea/css/resize.css\";\nimport MapArea from \"../MapArea\";\nimport DataArea from \"../DataArea\";\nimport DropArea from \"../DropArea\";\nimport WebSocketManager from \"../../helpers/WebSocketManager\";\nimport { predictCDA, predictPayload } from \"../../helpers/predictions\";\nimport { getDirection } from \"../../helpers/direction\";\nimport { predictLoc } from \"../../helpers/location\";\n\nclass GroundStation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentData: {},\n      isConnected: false,\n      cargoDropped: false,\n      oneDropped: false,\n      twoDropped: false\n    };\n    this.dataLog = [];\n    this.planePositionHistory = [];\n\n    this.setDropped = (drop, value) => {\n      const change = {};\n      change[drop] = value;\n      this.setState(change);\n    };\n\n    this.setData = rawData => {\n      const data = JSON.parse(rawData);\n      const time = +Date.now();\n      const timeElapsed = time - this.state.lastPacketTime;\n      const _this$state = this.state,\n            currentData = _this$state.currentData,\n            cargoDropped = _this$state.cargoDropped,\n            oneDropped = _this$state.oneDropped,\n            twoDropped = _this$state.twoDropped;\n      data.timeElapsed = timeElapsed;\n      this.state.lastPacketTime = time;\n\n      if (data.flightData) {\n        data.flightData.timeRecieved = time / 1000 || 0;\n        data.flightData.payloadPredictionDistance = predictPayload(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.CDAPredictionDistance = predictCDA(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\n        data.flightData.direction = getDirection(currentData.flightData, data.flightData);\n\n        if (data.flightData.direction === 0) {\n          data.flightData.direction = this.state.oldDirection;\n        }\n\n        this.state.oldDirection = data.flightData.direction;\n        data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\n        data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\n        data.flightData.cargoDropped = cargoDropped;\n        data.flightData.oneDropped = oneDropped;\n        data.flightData.twoDropped = twoDropped;\n        this.planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\n        this.dataLog.push(data.flightData);\n        this.setState({\n          currentData: data\n        });\n      }\n    };\n\n    this.setConnected = isConnected => {\n      this.setState({\n        isConnected\n      });\n    };\n\n    this.getConnected = () => {\n      return this.state.isConnected;\n    };\n\n    this.webSocketManager = new WebSocketManager(this.setData, this.setConnected, this.getConnected);\n\n    this.clearDataLog = () => {\n      this.dataLog = [];\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          currentData = _this$state2.currentData,\n          isConnected = _this$state2.isConnected,\n          cargoDropped = _this$state2.cargoDropped,\n          oneDropped = _this$state2.oneDropped,\n          twoDropped = _this$state2.twoDropped;\n    return React.createElement(\"div\", {\n      style: {\n        paddingLeft: 0,\n        paddingBottom: \"1em\",\n        paddingTop: \"1em\",\n        border: \"none\",\n        height: \"100%\",\n        boxSizing: \"content-box\",\n        paddingRight: 0,\n        maxWidth: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        height: \"calc(100% - 2em)\",\n        overflow: \"hidden\",\n        overflowX: \"auto\",\n        paddingBottom: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(MapArea, {\n      currentData: currentData,\n      planePositionHistory: this.planePositionHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(DataArea, {\n      dataLog: this.dataLog,\n      saveLog: this.saveDataLog,\n      clearLog: this.clearDataLog,\n      receiveData: this.receiveData,\n      currentData: currentData,\n      webSocketManager: this.webSocketManager,\n      isConnected: isConnected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(DropArea, {\n      currentData: currentData,\n      webSocketManager: this.webSocketManager,\n      isConnected: isConnected,\n      cargoDropped: cargoDropped,\n      oneDropped: oneDropped,\n      twoDropped: twoDropped,\n      setDropped: this.setDropped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GroundStation;","map":{"version":3,"sources":["C:/Users/James Pan/Documents/UBC/demo/groundstationweb/src/components/GroundStation/index.jsx"],"names":["React","Component","MapArea","DataArea","DropArea","WebSocketManager","predictCDA","predictPayload","getDirection","predictLoc","GroundStation","state","currentData","isConnected","cargoDropped","oneDropped","twoDropped","dataLog","planePositionHistory","setDropped","drop","value","change","setState","setData","rawData","data","JSON","parse","time","Date","now","timeElapsed","lastPacketTime","flightData","timeRecieved","payloadPredictionDistance","pitch","altitude","velocity","headwind","CDAPredictionDistance","direction","oldDirection","payloadLatLong","cdaLatLong","push","latitude","longitude","setConnected","getConnected","webSocketManager","clearDataLog","render","paddingLeft","paddingBottom","paddingTop","border","height","boxSizing","paddingRight","maxWidth","display","overflow","overflowX","saveDataLog","receiveData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"../MapArea/css/resize.css\";\r\nimport MapArea from \"../MapArea\";\r\nimport DataArea from \"../DataArea\";\r\nimport DropArea from \"../DropArea\";\r\nimport WebSocketManager from \"../../helpers/WebSocketManager\";\r\nimport { predictCDA, predictPayload } from \"../../helpers/predictions\";\r\nimport { getDirection } from \"../../helpers/direction\";\r\nimport { predictLoc } from \"../../helpers/location\";\r\n\r\n\r\nclass GroundStation extends Component {\r\n  state = {\r\n    currentData: {},\r\n    isConnected: false,\r\n    cargoDropped: false,\r\n    oneDropped: false,\r\n    twoDropped: false,\r\n  };\r\n\r\n  dataLog = [];\r\n\r\n  planePositionHistory = [];\r\n\r\n  setDropped = (drop, value) => {\r\n    const change = {};\r\n    change[drop] = value;\r\n    this.setState(change);\r\n  };\r\n\r\n  setData = (rawData) => {\r\n    const data = JSON.parse(rawData);\r\n    const time = +Date.now();\r\n    const timeElapsed = time - this.state.lastPacketTime;\r\n    const { currentData, cargoDropped, oneDropped, twoDropped } = this.state;\r\n    data.timeElapsed = timeElapsed;\r\n    this.state.lastPacketTime = time;\r\n    if (data.flightData) {\r\n      data.flightData.timeRecieved = (time / 1000) || 0;\r\n\r\n      data.flightData.payloadPredictionDistance = predictPayload(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\r\n      data.flightData.CDAPredictionDistance = predictCDA(data.flightData.pitch, data.flightData.altitude, data.flightData.velocity, data.flightData.headwind);\r\n\r\n      data.flightData.direction = getDirection(currentData.flightData, data.flightData);\r\n\r\n      if(data.flightData.direction === 0) {\r\n        data.flightData.direction = this.state.oldDirection;\r\n      }\r\n\r\n      this.state.oldDirection = data.flightData.direction;\r\n\r\n      data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\r\n      data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\r\n\r\n      data.flightData.cargoDropped = cargoDropped;\r\n      data.flightData.oneDropped = oneDropped;\r\n      data.flightData.twoDropped = twoDropped;\r\n\r\n      this.planePositionHistory.push([data.flightData.latitude, data.flightData.longitude]);\r\n      this.dataLog.push(data.flightData);\r\n      this.setState({ currentData: data });\r\n    }\r\n  }\r\n\r\n  setConnected = (isConnected) => {\r\n    this.setState({ isConnected });\r\n  }\r\n\r\n  getConnected = () => {\r\n    return this.state.isConnected;\r\n  }\r\n\r\n  webSocketManager = new WebSocketManager(this.setData, this.setConnected, this.getConnected);\r\n\r\n  clearDataLog = () => {\r\n    this.dataLog = [];\r\n  };\r\n\r\n  render() {\r\n    const { currentData, isConnected, cargoDropped, oneDropped, twoDropped } = this.state;\r\n    return (\r\n      <div\r\n        style={{\r\n          paddingLeft: 0,\r\n          paddingBottom: \"1em\",\r\n          paddingTop: \"1em\",\r\n          border: \"none\",\r\n          height: \"100%\",\r\n          boxSizing: \"content-box\",\r\n          paddingRight: 0,\r\n          maxWidth: \"100%\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", height: \"calc(100% - 2em)\", overflow: \"hidden\", overflowX: \"auto\", paddingBottom: \"1em\" }}>\r\n          <MapArea currentData={currentData} planePositionHistory={this.planePositionHistory} />\r\n          <DataArea\r\n            dataLog={this.dataLog}\r\n            saveLog={this.saveDataLog}\r\n            clearLog={this.clearDataLog}\r\n            receiveData={this.receiveData}\r\n            currentData={currentData}\r\n            webSocketManager={this.webSocketManager}\r\n            isConnected={isConnected}\r\n          />\r\n          <DropArea\r\n            currentData={currentData}\r\n            webSocketManager={this.webSocketManager}\r\n            isConnected={isConnected}\r\n            cargoDropped={cargoDropped}\r\n            oneDropped={oneDropped}\r\n            twoDropped={twoDropped}\r\n            setDropped={this.setDropped}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GroundStation;\r\n"]},"metadata":{},"sourceType":"module"}