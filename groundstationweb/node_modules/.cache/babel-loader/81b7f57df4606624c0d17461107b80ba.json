{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\GroundStation\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Tab } from \"semantic-ui-react\";\nimport \"../MapArea/css/resize.css\";\nimport MapArea from \"../MapArea\";\nimport DataArea from \"../DataArea\";\nimport { predictPayload, predictCDA } from \"../../helpers/predictions\";\nimport { predictLoc } from \"../../helpers/location\";\nimport { getDirection } from \"../../helpers/direction\";\n\nclass GroundStation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.dataLog = [];\n    this.state = {\n      currentData: {}\n    };\n    this.lastPacketTime = 0;\n\n    this.recieveData = rawData => {\n      const currentData = this.state.currentData;\n      const data = JSON.parse(rawData);\n      const time = +Date.now();\n      const timeElapsed = time - this.lastPacketTime;\n      data.timeElapsed = timeElapsed;\n      this.lastPacketTime = time;\n\n      if (data.flightData) {\n        data.flightData.timeRecieved = time / 1000 | 0;\n        this.dataLog.push(data.flightData);\n        data.flightData.payloadPredictionDistance = predictPayload(data.flightData.altitude, data.flightData.velocity);\n        data.flightData.CDAPredictionDistance = predictCDA(data.flightData.altitude, data.flightData.velocity);\n        data.flightData.direction = getDirection(currentData.flightData, data.flightData);\n        data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\n        data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\n        this.setState({\n          currentData: data\n        });\n      }\n    };\n\n    this.clearDataLog = () => {\n      this.dataLog = [];\n    };\n\n    this.download = (filename, text) => {\n      let pom = document.createElement('a');\n      pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      pom.setAttribute('download', filename);\n\n      if (document.createEvent) {\n        var event = document.createEvent('MouseEvents');\n        event.initEvent('click', true, true);\n        pom.dispatchEvent(event);\n      } else {\n        pom.click();\n      }\n    };\n\n    this.saveDataLog = () => {\n      console.log(\"Saving\", this.dataLog.length, \"records\");\n      let csv = \"TimeSent, TimeRecieved, Latitude, Longitude, GPS Altitude (ft), Velocity (m/s), GPS Accuracy,\";\n      this.dataLog.forEach(d => {\n        csv = \"\".concat(csv, \"\\n\").concat(d.timeSent, \", \").concat(d.timeRecieved, \", \").concat(d.latitude, \", \").concat(d.longitude, \", \").concat(d.altitude, \", \").concat(d.velocity, \", \").concat(d.accuracy);\n      });\n      this.download(\"Flight Log \".concat(new Date().toISOString(), \".csv\"), csv);\n    };\n  }\n\n  render() {\n    const currentData = this.state.currentData;\n    const height = window.innerHeight - 30;\n    return React.createElement(Tab.Pane, {\n      style: {\n        paddingLeft: 0,\n        paddingBottom: \"3em\",\n        border: \"none\",\n        height: height,\n        boxSizing: \"content-box\",\n        paddingRight: 0,\n        maxWidth: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        height: \"calc(100% - 3em)\",\n        overflow: \"hidden\",\n        overflowX: \"auto\",\n        paddingBottom: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MapArea, {\n      currentData: currentData,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(DataArea, {\n      saveLog: this.saveDataLog,\n      clearLog: this.clearDataLog,\n      recieveData: this.recieveData,\n      currentData: currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(DropArea, {\n      currentData: currentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GroundStation;","map":{"version":3,"sources":["C:\\Users\\James Pan\\Desktop\\demo\\groundstationweb\\src\\components\\GroundStation\\index.jsx"],"names":["React","Component","Tab","MapArea","DataArea","predictPayload","predictCDA","predictLoc","getDirection","GroundStation","dataLog","state","currentData","lastPacketTime","recieveData","rawData","data","JSON","parse","time","Date","now","timeElapsed","flightData","timeRecieved","push","payloadPredictionDistance","altitude","velocity","CDAPredictionDistance","direction","payloadLatLong","cdaLatLong","setState","clearDataLog","download","filename","text","pom","document","createElement","setAttribute","encodeURIComponent","createEvent","event","initEvent","dispatchEvent","click","saveDataLog","console","log","length","csv","forEach","d","timeSent","latitude","longitude","accuracy","toISOString","render","height","window","innerHeight","paddingLeft","paddingBottom","border","boxSizing","paddingRight","maxWidth","display","overflow","overflowX"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport \"../MapArea/css/resize.css\";\r\nimport MapArea from \"../MapArea\";\r\nimport DataArea from \"../DataArea\";\r\n\r\nimport { predictPayload, predictCDA } from \"../../helpers/predictions\"\r\nimport {predictLoc} from \"../../helpers/location\"\r\nimport {getDirection} from \"../../helpers/direction\"\r\n\r\n\r\n\r\nclass GroundStation extends Component {\r\n\r\n    dataLog = [];\r\n\r\n    state = {\r\n        currentData: {},\r\n    }\r\n\r\n    lastPacketTime = 0;\r\n\r\n    recieveData = (rawData) => {\r\n        const { currentData } = this.state;\r\n        const data = JSON.parse(rawData);\r\n        const time = +Date.now();\r\n        const timeElapsed = time - this.lastPacketTime;\r\n        data.timeElapsed = timeElapsed;\r\n        this.lastPacketTime = time;\r\n        if (data.flightData) {\r\n            data.flightData.timeRecieved = (time / 1000) | 0;\r\n            this.dataLog.push(data.flightData);\r\n\r\n\r\n            data.flightData.payloadPredictionDistance = predictPayload(data.flightData.altitude, data.flightData.velocity);\r\n            data.flightData.CDAPredictionDistance = predictCDA(data.flightData.altitude, data.flightData.velocity);\r\n\r\n\r\n            data.flightData.direction = getDirection(currentData.flightData, data.flightData);\r\n\r\n            data.flightData.payloadLatLong = predictLoc(data.flightData, data.flightData.payloadPredictionDistance);\r\n            data.flightData.cdaLatLong = predictLoc(data.flightData, data.flightData.CDAPredictionDistance);\r\n\r\n            this.setState({ currentData: data });\r\n        }\r\n    };\r\n\r\n\r\n    clearDataLog = () => {\r\n        this.dataLog = [];\r\n    }\r\n\r\n    download = (filename, text) => {\r\n        let pom = document.createElement('a');\r\n        pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        pom.setAttribute('download', filename);\r\n\r\n        if (document.createEvent) {\r\n            var event = document.createEvent('MouseEvents');\r\n            event.initEvent('click', true, true);\r\n            pom.dispatchEvent(event);\r\n        }\r\n        else {\r\n            pom.click();\r\n        }\r\n    }\r\n\r\n    saveDataLog = () => {\r\n        console.log(\"Saving\", this.dataLog.length, \"records\");\r\n        let csv = \"TimeSent, TimeRecieved, Latitude, Longitude, GPS Altitude (ft), Velocity (m/s), GPS Accuracy,\";\r\n        this.dataLog.forEach((d) => {\r\n            csv = `${csv}\\n${d.timeSent}, ${d.timeRecieved}, ${d.latitude}, ${d.longitude}, ${d.altitude}, ${d.velocity}, ${d.accuracy}`;\r\n        });\r\n\r\n        this.download(`Flight Log ${new Date().toISOString()}.csv`, csv);\r\n    }\r\n\r\n    render(){\r\n        const { currentData } = this.state;\r\n        const height = window.innerHeight - 30;\r\n        return (\r\n            <Tab.Pane\r\n                style={{\r\n                    paddingLeft: 0,\r\n                    paddingBottom: \"3em\",\r\n                    border: \"none\",\r\n                    height: height,\r\n                    boxSizing: \"content-box\",\r\n                    paddingRight: 0,\r\n                    maxWidth: \"100%\",\r\n                }}>\r\n                <div style={{ display: \"flex\", height: \"calc(100% - 3em)\", overflow: \"hidden\", overflowX: \"auto\", paddingBottom: \"1em\" }}>\r\n                    <MapArea currentData={currentData} height={height} />\r\n                    <DataArea saveLog={this.saveDataLog} clearLog={this.clearDataLog} recieveData={this.recieveData} currentData={currentData} />\r\n                    <DropArea currentData={currentData}/>\r\n\r\n                </div>\r\n            </Tab.Pane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroundStation;\r\n\r\n"]},"metadata":{},"sourceType":"module"}