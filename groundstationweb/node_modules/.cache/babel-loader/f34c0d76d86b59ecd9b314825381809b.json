{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\DataArea\\\\components\\\\DataDisplay.jsx\";\nimport React, { Component } from 'react';\n\nclass DataDisplay extends Component {\n  render() {\n    const currentData = this.props.currentData;\n    const flightData = currentData.flightData;\n\n    if (!flightData) {\n      return React.createElement(\"div\", {\n        style: {\n          color: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"No Flight Data received\");\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        overflow: \"hidden\",\n        fontSize: \"12pt\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"flight_data_table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Altitude GPS (ft)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.altitude * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.latitude * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Longitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.longitude * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Velocity (m/s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.velocity * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Accuracy\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.accuracy * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Bearing\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.bearing * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Headwind (m/s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, Math.round(flightData.headwind * 100) / 100)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Air Pressure\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, Math.round(flightData.air_pressure * 100) / 100)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Air Temperature (\\xB0C)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.airTemp * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Pitch\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.pitch * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Roll\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.roll * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Yaw\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\".concat(Math.round(flightData.yaw * 100000) / 100000, \"\\xBA\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"TimeElapsed\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, currentData.timeElapsed)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Payload Prediction (ft)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, Math.round(flightData.payloadPredictionDistance * 1000) / 1000)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"CDA Prediction(ft)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, Math.round(flightData.CDAPredictionDistance * 1000) / 1000)))));\n  }\n\n}\n\nexport default DataDisplay;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/DataArea/components/DataDisplay.jsx"],"names":["React","Component","DataDisplay","render","currentData","props","flightData","color","width","overflow","fontSize","Math","round","altitude","latitude","longitude","velocity","accuracy","bearing","headwind","air_pressure","airTemp","pitch","roll","yaw","timeElapsed","payloadPredictionDistance","CDAPredictionDistance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,MAAM,GAAG;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAAA,UAECE,UAFD,GAEgBF,WAFhB,CAECE,UAFD;;AAGP,QAAI,CAACA,UAAL,EAAiB;AACf,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF;AAKD;;AACD,WACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,QAA3B;AAAqCC,QAAAA,QAAQ,EAAE;AAA/C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQC,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACO,QAAX,GAAoB,MAA/B,IAAuC,MAA/C,UAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQF,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACQ,QAAX,GAAoB,MAA/B,IAAuC,MAA/C,UAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQH,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACS,SAAX,GAAqB,MAAhC,IAAwC,MAAhD,UAFF,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQJ,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACU,QAAX,GAAoB,MAA/B,IAAuC,MAA/C,UAFF,CAbF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQL,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACW,QAAX,GAAoB,MAA/B,IAAuC,MAA/C,UAFF,CAjBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQN,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACY,OAAX,GAAmB,MAA9B,IAAsC,MAA9C,UAFF,CArBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACa,QAAX,GAAoB,GAA/B,IAAoC,GAAzC,CAFF,CAzBF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACc,YAAX,GAAwB,GAAnC,IAAwC,GAA7C,CAFF,CA7BF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQT,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACe,OAAX,GAAmB,MAA9B,IAAsC,MAA9C,UAFF,CAjCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQV,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACgB,KAAX,GAAiB,MAA5B,IAAoC,MAA5C,UAFF,CArCF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQX,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACiB,IAAX,GAAgB,MAA3B,IAAmC,MAA3C,UAFF,CAzCF,EA6CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQZ,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACkB,GAAX,GAAe,MAA1B,IAAkC,MAA1C,UAFF,CA7CF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKpB,WAAW,CAACqB,WAAjB,CAFF,CAjDF,EAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACoB,yBAAX,GAAuC,IAAlD,IAA0D,IAA/D,CAFF,CArDF,EAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,IAAI,CAACC,KAAL,CAAWN,UAAU,CAACqB,qBAAX,GAAmC,IAA9C,IAAsD,IAA3D,CAFF,CAzDF,CADF,CADF,CADF;AAoED;;AA/EiC;;AAkFpC,eAAezB,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass DataDisplay extends Component {\n  render() {\n    const { currentData } = this.props;\n    const { flightData } = currentData;\n    if (!flightData) {\n      return (\n        <div style={{ color: \"grey\" }}>\n            No Flight Data received\n        </div>\n      );\n    }\n    return (\n      <div style={{ width: \"100%\", overflow: \"hidden\", fontSize: \"12pt\" }}>\n        <table id=\"flight_data_table\">\n          <tbody>\n            <tr>\n              <td>Altitude GPS (ft)</td>\n              <td>{`${Math.round(flightData.altitude*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Latitude</td>\n              <td>{`${Math.round(flightData.latitude*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Longitude</td>\n              <td>{`${Math.round(flightData.longitude*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Velocity (m/s)</td>\n              <td>{`${Math.round(flightData.velocity*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Accuracy</td>\n              <td>{`${Math.round(flightData.accuracy*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Bearing</td>\n              <td>{`${Math.round(flightData.bearing*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Headwind (m/s)</td>\n              <td>{Math.round(flightData.headwind*100)/100}</td>\n            </tr>\n            <tr>\n              <td>Air Pressure</td>\n              <td>{Math.round(flightData.air_pressure*100)/100}</td>\n            </tr>\n            <tr>\n              <td>Air Temperature (°C)</td>\n              <td>{`${Math.round(flightData.airTemp*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Pitch</td>\n              <td>{`${Math.round(flightData.pitch*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Roll</td>\n              <td>{`${Math.round(flightData.roll*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>Yaw</td>\n              <td>{`${Math.round(flightData.yaw*100000)/100000}º`}</td>\n            </tr>\n            <tr>\n              <td>TimeElapsed</td>\n              <td>{currentData.timeElapsed}</td>\n            </tr>\n            <tr>\n              <td>Payload Prediction (ft)</td>\n              <td>{Math.round(flightData.payloadPredictionDistance * 1000) / 1000 }</td>\n            </tr>\n            <tr>\n              <td>CDA Prediction(ft)</td>\n              <td>{Math.round(flightData.CDAPredictionDistance * 1000) / 1000}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default DataDisplay;\n"]},"metadata":{},"sourceType":"module"}