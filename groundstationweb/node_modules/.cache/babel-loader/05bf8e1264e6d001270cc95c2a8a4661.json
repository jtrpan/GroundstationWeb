{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\DataArea\\\\components\\\\LoggerArea.jsx\";\nimport React, { Component } from 'react';\nimport { Segment, Header, Button, Modal, Icon, Table } from \"semantic-ui-react\";\n\nclass LoggerArea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmationOpen: false,\n      exportModalOpen: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          saveLog = _this$props.saveLog,\n          clearLog = _this$props.clearLog,\n          dataLog = _this$props.dataLog;\n    const _this$state = this.state,\n          confirmationOpen = _this$state.confirmationOpen,\n          exportModalOpen = _this$state.exportModalOpen;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Log Data:\"), React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: \"auto\",\n        width: \"max-content\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"View Log\",\n      icon: \"eye\",\n      basic: true,\n      onClick: () => {\n        this.setState({\n          exportModalOpen: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Clear Log\",\n      icon: \"cancel\",\n      negative: true,\n      basic: true,\n      onClick: () => {\n        this.setState({\n          confirmationOpen: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })))), exportModalOpen && React.createElement(Modal, {\n      open: true,\n      size: \"large\",\n      onClose: () => {\n        this.setState({\n          exportModalOpen: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"View Log\"), React.createElement(Modal.Content, {\n      scrolling: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, dataLog.length > 0 ? React.createElement(Table, {\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Time\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Altitude (ft)\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Velocity (m/s)\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Longitude\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, dataLog.map(d => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, d.timereceived), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, d.altitude), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, d.velocity), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, d.latitude), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, d.longitude));\n    }))) : React.createElement(\"span\", {\n      style: {\n        color: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"There has been no data received\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        float: \"left\"\n      },\n      content: \"Cancel\",\n      onClick: () => {\n        this.setState({\n          exportModalOpen: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        float: \"left\"\n      },\n      negative: true,\n      disabled: dataLog.length === 0,\n      content: \"Clear Log\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: dataLog.length === 0,\n      primary: true,\n      content: \"Export Log\",\n      onClick: () => {\n        saveLog();\n        this.setState({\n          exportModalOpen: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), confirmationOpen && React.createElement(Modal, {\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Are you sure you want to clear the flight log?\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"exclamation\",\n      size: \"big\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \"This action cannot be undone.\")), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: \"Cancel\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      negative: true,\n      content: \"Clear Log\",\n      onClick: () => {\n        this.setState({\n          confirmationOpen: false\n        });\n        clearLog();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default LoggerArea;","map":{"version":3,"sources":["C:/Users/James Pan/Desktop/demo/groundstationweb/src/components/DataArea/components/LoggerArea.jsx"],"names":["React","Component","Segment","Header","Button","Modal","Icon","Table","LoggerArea","state","confirmationOpen","exportModalOpen","render","props","saveLog","clearLog","dataLog","width","margin","setState","length","map","d","timereceived","altitude","velocity","latitude","longitude","color","float","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Segment, Header, Button, Modal, Icon, Table } from \"semantic-ui-react\";\n\nclass LoggerArea extends Component {\n  state = {\n    confirmationOpen: false,\n    exportModalOpen: false,\n  };\n\n  render() {\n    const { saveLog, clearLog, dataLog } = this.props;\n    const { confirmationOpen, exportModalOpen } = this.state;\n    return (\n      <React.Fragment>\n        <Segment>\n          <Header as=\"h5\">Log Data:</Header>\n          <div style={{ width: \"100%\" }}>\n            <div style={{ margin: \"auto\", width: \"max-content\" }}>\n              <Button content=\"View Log\" icon=\"eye\" basic onClick={() => { this.setState({ exportModalOpen: true }); }} />\n              <Button content=\"Clear Log\" icon=\"cancel\" negative basic onClick={() => { this.setState({ confirmationOpen: true }); }} />\n            </div>\n          </div>\n        </Segment>\n        {exportModalOpen && (\n          <Modal\n            open\n            size=\"large\"\n            onClose={() => { this.setState({ exportModalOpen: false }); }}\n          >\n            <Modal.Header>\n                  View Log\n            </Modal.Header>\n            <Modal.Content scrolling>\n              {dataLog.length > 0 ? (\n                <Table compact>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Time</Table.HeaderCell>\n                      <Table.HeaderCell>Altitude (ft)</Table.HeaderCell>\n                      <Table.HeaderCell>Velocity (m/s)</Table.HeaderCell>\n                      <Table.HeaderCell>Latitude</Table.HeaderCell>\n                      <Table.HeaderCell>Longitude</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {dataLog.map((d) => {\n                      return (\n                        <Table.Row>\n                          <Table.Cell>{d.timereceived}</Table.Cell>\n                          <Table.Cell>{d.altitude}</Table.Cell>\n                          <Table.Cell>{d.velocity}</Table.Cell>\n                          <Table.Cell>{d.latitude}</Table.Cell>\n                          <Table.Cell>{d.longitude}</Table.Cell>\n                        </Table.Row>\n                      );\n                    })}\n                  </Table.Body>\n                </Table>\n              ) : (\n                <span style={{ color: \"grey\" }}>\n                  There has been no data received\n                </span>\n              )}\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                style={{ float: \"left\" }}\n                content=\"Cancel\"\n                onClick={() => { this.setState({ exportModalOpen: false }); }}\n              />\n              <Button\n                style={{ float: \"left\" }}\n                negative\n                disabled={dataLog.length === 0}\n                content=\"Clear Log\"\n                onClick={() => { this.setState({ confirmationOpen: true }); }}\n              />\n              <Button\n                disabled={dataLog.length === 0}\n                primary\n                content=\"Export Log\"\n                onClick={() => { saveLog(); this.setState({ exportModalOpen: false }); }}\n              />\n            </Modal.Actions>\n          </Modal>\n        )}\n        {confirmationOpen && (\n          <Modal open>\n            <Modal.Header>\n                  Are you sure you want to clear the flight log?\n            </Modal.Header>\n            <Modal.Content>\n              <div style={{ padding: \"1em\" }}>\n                <Icon name=\"exclamation\" size=\"big\" color=\"red\" />\n                    This action cannot be undone.\n              </div>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button\n                content=\"Cancel\"\n                onClick={() => { this.setState({ confirmationOpen: false }); }}\n              />\n              <Button\n                negative\n                content=\"Clear Log\"\n                onClick={() => { this.setState({ confirmationOpen: false }); clearLog(); }}\n              />\n            </Modal.Actions>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LoggerArea;\n"]},"metadata":{},"sourceType":"module"}