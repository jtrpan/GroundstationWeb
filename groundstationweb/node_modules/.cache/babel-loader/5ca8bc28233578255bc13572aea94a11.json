{"ast":null,"code":"'use strict';\n\nmodule.exports = IntegratorFactory;\n\nvar Integrator = function Integrator(y0, deriv, t, dt) {\n  // Bind variables to this:\n  this.deriv = deriv;\n  this.y = y0;\n  this.n = this.y.length;\n  this.dt = dt;\n  this.t = t; // Create a scratch array into which we compute the derivative:\n\n  this._ctor = this.y.constructor;\n  this._w = new this._ctor(this.n);\n  this._k1 = new this._ctor(this.n);\n  this._k2 = new this._ctor(this.n);\n  this._k3 = new this._ctor(this.n);\n  this._k4 = new this._ctor(this.n);\n};\n\nIntegrator.prototype.step = function () {\n  this.deriv(this._k1, this.y, this.t);\n\n  for (var i = 0; i < this.n; i++) {\n    this._w[i] = this.y[i] + this._k1[i] * this.dt * 0.5;\n  }\n\n  this.deriv(this._k2, this._w, this.t + this.dt * 0.5);\n\n  for (var i = 0; i < this.n; i++) {\n    this._w[i] = this.y[i] + this._k2[i] * this.dt * 0.5;\n  }\n\n  this.deriv(this._k3, this._w, this.t + this.dt * 0.5);\n\n  for (var i = 0; i < this.n; i++) {\n    this._w[i] = this.y[i] + this._k3[i] * this.dt;\n  }\n\n  this.deriv(this._k4, this._w, this.t + this.dt);\n  var dto6 = this.dt / 6.0;\n\n  for (var i = 0; i < this.n; i++) {\n    this.y[i] += dto6 * (this._k1[i] + 2 * this._k2[i] + 2 * this._k3[i] + this._k4[i]);\n  }\n\n  this.t += this.dt;\n  return this;\n};\n\nIntegrator.prototype.steps = function (n) {\n  for (var step = 0; step < n; step++) {\n    this.step();\n  }\n\n  return this;\n};\n\nfunction IntegratorFactory(y0, deriv, t, dt) {\n  return new Integrator(y0, deriv, t, dt);\n}","map":null,"metadata":{},"sourceType":"script"}