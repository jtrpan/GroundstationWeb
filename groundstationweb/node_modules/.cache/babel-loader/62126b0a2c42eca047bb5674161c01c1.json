{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James Pan\\\\Desktop\\\\demo\\\\groundstationweb\\\\src\\\\components\\\\MapArea\\\\index.js\";\nimport React, { Component } from 'react';\nimport AeroMap from \"./components/AeroMap\";\nimport MapSettings from \"./components/MapSettings\";\nimport { Segment } from \"semantic-ui-react\";\nimport \"./css/style.css\";\n\nclass MapArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSettingsState = state => {\n      this.setState(state);\n    };\n\n    this.zoomToPlane = () => {\n      const currentData = this.props.currentData;\n      if (!currentData || !currentData.flightData) return;\n      const _currentData$flightDa = currentData.flightData,\n            latitude = _currentData$flightDa.latitude,\n            longitude = _currentData$flightDa.longitude;\n      const eps = Math.random() * 0.00000001;\n      this.setState({\n        mapLat: latitude + eps,\n        mapLong: longitude + eps,\n        zoom: 19 + eps\n      });\n    };\n\n    this.zoomToTarget = () => {\n      if (this.state.targLat == null || this.state.targLng == null) return;\n      const eps = Math.random() * 0.00000001;\n      this.setState({\n        mapLat: this.state.targLat + eps,\n        mapLong: this.state.targLng + eps,\n        zoom: 19 + eps\n      });\n    };\n\n    this.setNewTarget = (inputLat, inputLng) => {\n      this.setState({\n        targLat: inputLat,\n        targLng: inputLng\n      });\n    };\n\n    this.followPlaneLive = () => {\n      if (this.state.followPlane) {\n        const eps = Math.random() * 0.00000001;\n        this.setState({\n          mapLat: latitude + eps,\n          mapLong: longitude + eps\n        });\n      }\n    };\n\n    this.state = {\n      mapLat: 49.258063,\n      mapLong: -123.195911,\n      targLat: null,\n      targLng: null,\n      followPlane: false,\n      drawPlane: true,\n      drawTarget: true,\n      followPlane: false,\n      zoom: 10\n    };\n    this.planeLat = 0;\n    this.planeLong = 0;\n  }\n\n  componentWillUpdate() {}\n\n  render() {\n    const _this$props = this.props,\n          height = _this$props.height,\n          currentData = _this$props.currentData;\n    const _this$state = this.state,\n          mapLat = _this$state.mapLat,\n          mapLong = _this$state.mapLong,\n          targLat = _this$state.targLat,\n          targLng = _this$state.targLng,\n          zoom = _this$state.zoom,\n          followPlane = _this$state.followPlane,\n          drawPlane = _this$state.drawPlane,\n          drawTarget = _this$state.drawTarget;\n\n    if (currentData && currentData.flightData) {\n      this.planeLat = currentData.flightData.latitude;\n      this.planeLong = currentData.flightData.longitude;\n    }\n\n    return React.createElement(Segment, {\n      style: {\n        padding: \"0px\",\n        display: \"flex\",\n        borderLeft: \"none\",\n        height: \"100%\",\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(AeroMap, {\n      planeLat: this.planeLat,\n      planeLong: this.planeLong,\n      mapLat: mapLat,\n      mapLong: mapLong,\n      mapHeight: height - 42,\n      targLat: targLat,\n      targLng: targLng,\n      followPlane: followPlane,\n      zoom: zoom,\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(MapSettings, {\n      drawPlane: drawPlane,\n      drawTarget: drawTarget,\n      followPlane: followPlane,\n      zoomToPlane: this.zoomToPlane,\n      zoomToTarget: this.zoomToTarget,\n      changeSettingsState: this.changeSettingsState,\n      setNewTarget: this.setNewTarget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MapArea;","map":{"version":3,"sources":["C:\\Users\\James Pan\\Desktop\\demo\\groundstationweb\\src\\components\\MapArea\\index.js"],"names":["React","Component","AeroMap","MapSettings","Segment","MapArea","constructor","props","changeSettingsState","state","setState","zoomToPlane","currentData","flightData","latitude","longitude","eps","Math","random","mapLat","mapLong","zoom","zoomToTarget","targLat","targLng","setNewTarget","inputLat","inputLng","followPlaneLive","followPlane","drawPlane","drawTarget","planeLat","planeLong","componentWillUpdate","render","height","padding","display","borderLeft","borderTopLeftRadius","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AeroMap from \"./components/AeroMap\";\r\nimport MapSettings from \"./components/MapSettings\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport \"./css/style.css\";\r\n\r\nclass MapArea extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mapLat: 49.258063,\r\n            mapLong: -123.195911,\r\n            targLat: null,\r\n            targLng: null,\r\n            followPlane: false,\r\n            drawPlane: true,\r\n            drawTarget: true,\r\n            followPlane: false,\r\n            zoom: 10,\r\n        };\r\n        this.planeLat = 0;\r\n        this.planeLong = 0;\r\n    };\r\n\r\n    componentWillUpdate(){\r\n\r\n    };\r\n\r\n    changeSettingsState = (state) => {\r\n        this.setState(state);\r\n    };\r\n\r\n    zoomToPlane = () => {\r\n        const { currentData } = this.props;\r\n        if (!currentData || !currentData.flightData) return;\r\n        const { latitude, longitude } = currentData.flightData;\r\n        const eps = Math.random()*0.00000001;\r\n        this.setState({ mapLat: latitude+eps, mapLong: longitude+eps, zoom: 19+eps });\r\n    };\r\n\r\n    zoomToTarget = () => {\r\n        if (this.state.targLat == null || this.state.targLng == null) return;\r\n        const eps = Math.random()*0.00000001;\r\n        this.setState({ mapLat: this.state.targLat + eps, mapLong: this.state.targLng + eps, zoom: 19+eps });\r\n    };\r\n\r\n    setNewTarget = (inputLat, inputLng) => {\r\n        this.setState({\r\n            targLat: inputLat,\r\n            targLng: inputLng,\r\n        })\r\n    }\r\n\r\n    followPlaneLive = () => {\r\n        if (this.state.followPlane) {\r\n            const eps = Math.random()*0.00000001;\r\n            this.setState({ mapLat: latitude+eps, mapLong: longitude+eps });\r\n        } \r\n    }\r\n\r\n    render(){\r\n        const { height, currentData } = this.props;\r\n        const { mapLat, mapLong, targLat, targLng, zoom, followPlane, drawPlane, drawTarget } = this.state;\r\n        if (currentData && currentData.flightData) {\r\n            this.planeLat = currentData.flightData.latitude;\r\n            this.planeLong = currentData.flightData.longitude;\r\n        }\r\n        return (\r\n            <Segment\r\n                style={{\r\n                    padding: \"0px\",\r\n                    display: \"flex\",\r\n                    borderLeft: \"none\",\r\n                    height: \"100%\",\r\n                    borderTopLeftRadius: 0,\r\n                    borderBottomLeftRadius: 0,\r\n                }}\r\n            >\r\n\r\n                <AeroMap\r\n                    planeLat={this.planeLat}\r\n                    planeLong={this.planeLong}\r\n                    mapLat={mapLat}\r\n                    mapLong={mapLong}\r\n                    mapHeight={height - 42}\r\n                    targLat={targLat}\r\n                    targLng={targLng}\r\n                    followPlane={followPlane}\r\n                    zoom={zoom}\r\n                    drawPlane={drawPlane}\r\n                    drawTarget={drawTarget}\r\n                />\r\n\r\n                <MapSettings\r\n                    drawPlane={drawPlane}\r\n                    drawTarget={drawTarget}\r\n                    followPlane={followPlane}\r\n                    zoomToPlane={this.zoomToPlane}\r\n                    zoomToTarget={this.zoomToTarget}\r\n                    changeSettingsState={this.changeSettingsState}\r\n                    setNewTarget={this.setNewTarget}\r\n                />\r\n            </Segment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MapArea;\r\n\r\n"]},"metadata":{},"sourceType":"module"}