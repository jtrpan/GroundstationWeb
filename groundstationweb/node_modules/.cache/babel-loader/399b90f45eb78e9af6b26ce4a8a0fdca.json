{"ast":null,"code":"//returns angle between last two positions, which depicts direction of plane's movement\n// Similar to relative bearing\nexport const getDirection = (oldData, newData) => {\n  if (oldData == null || oldData == null) return 0;\n  const newLat = toRad(newData.latitude);\n  const oldLat = toRad(oldData.latitude);\n  const newLong = toRad(newData.longitude);\n  const oldLong = toRad(oldData.longitude);\n  let y = Math.sin(newLong - oldLong) * Math.cos(newLat);\n  let x = Math.cos(oldLat) * Math.sin(newLat) - Math.sin(oldLat) * Math.cos(newLat) * Math.cos(newLong - oldLong);\n  let bearing = toDeg(Math.atan2(y, x));\n  return bearing;\n};\n\nconst toDeg = rad => {\n  return rad * 180 / Math.PI;\n};\n\nconst toRad = angle => {\n  return angle * Math.PI / 180;\n};","map":{"version":3,"sources":["C:\\Users\\James Pan\\Desktop\\demo\\groundstationweb\\src\\helpers\\direction.js"],"names":["getDirection","oldData","newData","newLat","toRad","latitude","oldLat","newLong","longitude","oldLong","y","Math","sin","cos","x","bearing","toDeg","atan2","rad","PI","angle"],"mappings":"AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC9C,MAAID,OAAO,IAAI,IAAX,IAAmBA,OAAO,IAAI,IAAlC,EAAwC,OAAO,CAAP;AAExC,QAAME,MAAM,GAAGC,KAAK,CAACF,OAAO,CAACG,QAAT,CAApB;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACH,OAAO,CAACI,QAAT,CAApB;AACA,QAAME,OAAO,GAAGH,KAAK,CAACF,OAAO,CAACM,SAAT,CAArB;AACA,QAAMC,OAAO,GAAGL,KAAK,CAACH,OAAO,CAACO,SAAT,CAArB;AAEA,MAAIE,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,OAAO,GAACE,OAAjB,IAA4BE,IAAI,CAACE,GAAL,CAASV,MAAT,CAApC;AACA,MAAIW,CAAC,GAAGH,IAAI,CAACE,GAAL,CAASP,MAAT,IAAiBK,IAAI,CAACC,GAAL,CAAST,MAAT,CAAjB,GACJQ,IAAI,CAACC,GAAL,CAASN,MAAT,IAAiBK,IAAI,CAACE,GAAL,CAASV,MAAT,CAAjB,GAAkCQ,IAAI,CAACE,GAAL,CAASN,OAAO,GAAEE,OAAlB,CADtC;AAEA,MAAIM,OAAO,GAAGC,KAAK,CAACL,IAAI,CAACM,KAAL,CAAWP,CAAX,EAAcI,CAAd,CAAD,CAAnB;AAEA,SAAOC,OAAP;AACH,CAdM;;AAgBP,MAAMC,KAAK,GAAIE,GAAD,IAAS;AACnB,SAAOA,GAAG,GAAG,GAAN,GAAYP,IAAI,CAACQ,EAAxB;AACH,CAFD;;AAIA,MAAMf,KAAK,GAAIgB,KAAD,IAAW;AACrB,SAAOA,KAAK,GAAGT,IAAI,CAACQ,EAAb,GAAkB,GAAzB;AACH,CAFD","sourcesContent":["\r\n//returns angle between last two positions, which depicts direction of plane's movement\r\n// Similar to relative bearing\r\nexport const getDirection = (oldData, newData) => {\r\n    if (oldData == null || oldData == null) return 0;\r\n\r\n    const newLat = toRad(newData.latitude);\r\n    const oldLat = toRad(oldData.latitude);\r\n    const newLong = toRad(newData.longitude);\r\n    const oldLong = toRad(oldData.longitude);\r\n\r\n    let y = Math.sin(newLong-oldLong) * Math.cos(newLat);\r\n    let x = Math.cos(oldLat)*Math.sin(newLat) -\r\n        Math.sin(oldLat)*Math.cos(newLat)*Math.cos(newLong -oldLong);\r\n    let bearing = toDeg(Math.atan2(y, x));\r\n\r\n    return bearing;\r\n}\r\n\r\nconst toDeg = (rad) => {\r\n    return rad * 180 / Math.PI;\r\n}\r\n\r\nconst toRad = (angle) => {\r\n    return angle * Math.PI / 180;\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}